<?php
/*
 * This file is part of Twig.
 *
 * (c) 2009 Fabien Potencier
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
abstract class Twig_Filter implements Twig_FilterInterface{protected$options;protected$arguments=array();function __construct(array$X=array()){$this->options=array_merge(array('needs_environment'=>false,'needs_context'=>false,'pre_escape'=>null,'preserves_safety'=>null,),$X);}function setArguments($N){$this->arguments=$N;}function getArguments(){return$this->arguments;}function needsEnvironment(){return$this->options['needs_environment'];}function needsContext(){return$this->options['needs_context'];}function getSafe(Twig_Node$FC){if(isset($this->options['is_safe'])){return$this->options['is_safe'];}if(isset($this->options['is_safe_callback'])){return call_user_func($this->options['is_safe_callback'],$FC);}return null;}function getPreservesSafety(){return$this->options['preserves_safety'];}function getPreEscape(){return$this->options['pre_escape'];}}class Twig_Autoloader{static function register(){ini_set('unserialize_callback_func','spl_autoload_call');spl_autoload_register(array(new self,'autoload'));}static function autoload($O){if(0!==strpos($O,'Twig')){return;}if(is_file($x=dirname(__FILE__).'/../'.str_replace(array('_',"\0"),array('/',''),$O).'.php')){require$x;}}}abstract class Twig_Extension implements Twig_ExtensionInterface{function initRuntime(Twig_Environment$qD){}function getTokenParsers(){return array();}function getNodeVisitors(){return array();}function getFilters(){return array();}function getTests(){return array();}function getFunctions(){return array();}function getOperators(){return array();}function getGlobals(){return array();}}class Twig_Filter_Method extends Twig_Filter{protected$extension;protected$method;function __construct(Twig_ExtensionInterface$a,$b,array$X=array()){parent::__construct($X);$this->extension=$a;$this->method=$b;}function compile(){return sprintf('$this->env->getExtension(\'%s\')->%s',$this->extension->getName(),$this->method);}}class Twig_Filter_Node extends Twig_Filter{protected$class;function __construct($O,array$X=array()){parent::__construct($X);$this->class=$O;}function getClass(){return$this->class;}function compile(){}}class Twig_Filter_Function extends Twig_Filter{protected$function;function __construct($d,array$X=array()){parent::__construct($X);$this->function=$d;}function compile(){return$this->function;}}class Twig_Function_Method extends Twig_Function{protected$extension;protected$method;function __construct(Twig_ExtensionInterface$a,$b,array$X=array()){parent::__construct($X);$this->extension=$a;$this->method=$b;}function compile(){return sprintf('$this->env->getExtension(\'%s\')->%s',$this->extension->getName(),$this->method);}}class Twig_Function_Node extends Twig_Function{protected$class;function __construct($O,array$X=array()){parent::__construct($X);$this->class=$O;}function getClass(){return$this->class;}function compile(){}}class Twig_Function_Function extends Twig_Function{protected$function;function __construct($d,array$X=array()){parent::__construct($X);$this->function=$d;}function compile(){return$this->function;}}interface Twig_TokenParserBrokerInterface{function getTokenParser($J);function setParser(Twig_ParserInterface$Q);function getParser();}class Twig_NodeTraverser{protected$env;protected$visitors;function __construct(Twig_Environment$H,array$BD=array()){$this->env=$H;$this->visitors=array();foreach($BD as$l){$this->addVisitor($l);}}function addVisitor(Twig_NodeVisitorInterface$l){if(!isset($this->visitors[$l->getPriority()])){$this->visitors[$l->getPriority()]=array();}$this->visitors[$l->getPriority()][]=$l;}function traverse(Twig_NodeInterface$B){ksort($this->visitors);foreach($this->visitors as$BD){foreach($BD as$l){$B=$this->traverseForVisitor($l,$B);}}return$B;}protected function traverseForVisitor(Twig_NodeVisitorInterface$l,Twig_NodeInterface$B=null){if(null===$B){return null;}$B=$l->enterNode($B,$this->env);foreach($B as$aC=>$k){if(false!==$k=$this->traverseForVisitor($l,$k)){$B->setNode($aC,$k);}else{$B->removeNode($aC);}}return$l->leaveNode($B,$this->env);}}class Twig_Extension_Optimizer extends Twig_Extension{protected$optimizers;function __construct($yB=-1){$this->optimizers=$yB;}function getNodeVisitors(){return array(new Twig_NodeVisitor_Optimizer($this->optimizers));}function getName(){return'optimizer';}}if(!defined('ENT_SUBSTITUTE')){define('ENT_SUBSTITUTE',8);}class Twig_Extension_Core extends Twig_Extension{protected$dateFormats=array('F j, Y H:i','%d days');protected$numberFormat=array(0,'.',',');protected$timezone=null;function setDateFormat($mB=null,$FD=null){if(null!==$mB){$this->dateFormats[0]=$mB;}if(null!==$FD){$this->dateFormats[1]=$FD;}}function getDateFormat(){return$this->dateFormats;}function setTimezone($s){$this->timezone=$s instanceof DateTimeZone?$s:new DateTimeZone($s);}function getTimezone(){return$this->timezone;}function setNumberFormat($GC,$BC,$_B){$this->numberFormat=array($GC,$BC,$_B);}function getNumberFormat(){return$this->numberFormat;}function getTokenParsers(){return array(new Twig_TokenParser_For(),new Twig_TokenParser_If(),new Twig_TokenParser_Extends(),new Twig_TokenParser_Include(),new Twig_TokenParser_Block(),new Twig_TokenParser_Use(),new Twig_TokenParser_Filter(),new Twig_TokenParser_Macro(),new Twig_TokenParser_Import(),new Twig_TokenParser_From(),new Twig_TokenParser_Set(),new Twig_TokenParser_Spaceless(),new Twig_TokenParser_Flush(),new Twig_TokenParser_Do(),new Twig_TokenParser_Embed(),);}function getFilters(){$LB=array('date'=>new Twig_Filter_Function('twig_date_format_filter',array('needs_environment'=>true)),'date_modify'=>new Twig_Filter_Function('twig_date_modify_filter',array('needs_environment'=>true)),'format'=>new Twig_Filter_Function('sprintf'),'replace'=>new Twig_Filter_Function('strtr'),'number_format'=>new Twig_Filter_Function('twig_number_format_filter',array('needs_environment'=>true)),'abs'=>new Twig_Filter_Function('abs'),'url_encode'=>new Twig_Filter_Function('twig_urlencode_filter'),'json_encode'=>new Twig_Filter_Function('twig_jsonencode_filter'),'convert_encoding'=>new Twig_Filter_Function('twig_convert_encoding'),'title'=>new Twig_Filter_Function('twig_title_string_filter',array('needs_environment'=>true)),'capitalize'=>new Twig_Filter_Function('twig_capitalize_string_filter',array('needs_environment'=>true)),'upper'=>new Twig_Filter_Function('strtoupper'),'lower'=>new Twig_Filter_Function('strtolower'),'striptags'=>new Twig_Filter_Function('strip_tags'),'trim'=>new Twig_Filter_Function('trim'),'nl2br'=>new Twig_Filter_Function('nl2br',array('pre_escape'=>'html','is_safe'=>array('html'))),'join'=>new Twig_Filter_Function('twig_join_filter'),'sort'=>new Twig_Filter_Function('twig_sort_filter'),'merge'=>new Twig_Filter_Function('twig_array_merge'),'reverse'=>new Twig_Filter_Function('twig_reverse_filter',array('needs_environment'=>true)),'length'=>new Twig_Filter_Function('twig_length_filter',array('needs_environment'=>true)),'slice'=>new Twig_Filter_Function('twig_slice',array('needs_environment'=>true)),'default'=>new Twig_Filter_Node('Twig_Node_Expression_Filter_Default'),'_default'=>new Twig_Filter_Function('_twig_default_filter'),'keys'=>new Twig_Filter_Function('twig_get_array_keys_filter'),'escape'=>new Twig_Filter_Function('twig_escape_filter',array('needs_environment'=>true,'is_safe_callback'=>'twig_escape_filter_is_safe')),'e'=>new Twig_Filter_Function('twig_escape_filter',array('needs_environment'=>true,'is_safe_callback'=>'twig_escape_filter_is_safe')),);if(function_exists('mb_get_info')){$LB['upper']=new Twig_Filter_Function('twig_upper_filter',array('needs_environment'=>true));$LB['lower']=new Twig_Filter_Function('twig_lower_filter',array('needs_environment'=>true));}return$LB;}function getFunctions(){return array('range'=>new Twig_Function_Function('range'),'constant'=>new Twig_Function_Function('constant'),'cycle'=>new Twig_Function_Function('twig_cycle'),'random'=>new Twig_Function_Function('twig_random',array('needs_environment'=>true)),'date'=>new Twig_Function_Function('twig_date_converter',array('needs_environment'=>true)),);}function getTests(){return array('even'=>new Twig_Test_Node('Twig_Node_Expression_Test_Even'),'odd'=>new Twig_Test_Node('Twig_Node_Expression_Test_Odd'),'defined'=>new Twig_Test_Node('Twig_Node_Expression_Test_Defined'),'sameas'=>new Twig_Test_Node('Twig_Node_Expression_Test_Sameas'),'none'=>new Twig_Test_Node('Twig_Node_Expression_Test_Null'),'null'=>new Twig_Test_Node('Twig_Node_Expression_Test_Null'),'divisibleby'=>new Twig_Test_Node('Twig_Node_Expression_Test_Divisibleby'),'constant'=>new Twig_Test_Node('Twig_Node_Expression_Test_Constant'),'empty'=>new Twig_Test_Function('twig_test_empty'),'iterable'=>new Twig_Test_Function('twig_test_iterable'),);}function getOperators(){return array(array('not'=>array('precedence'=>50,'class'=>'Twig_Node_Expression_Unary_Not'),'-'=>array('precedence'=>500,'class'=>'Twig_Node_Expression_Unary_Neg'),'+'=>array('precedence'=>500,'class'=>'Twig_Node_Expression_Unary_Pos'),),array('b-and'=>array('precedence'=>5,'class'=>'Twig_Node_Expression_Binary_BitwiseAnd','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'b-xor'=>array('precedence'=>5,'class'=>'Twig_Node_Expression_Binary_BitwiseXor','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'b-or'=>array('precedence'=>5,'class'=>'Twig_Node_Expression_Binary_BitwiseOr','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'or'=>array('precedence'=>10,'class'=>'Twig_Node_Expression_Binary_Or','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'and'=>array('precedence'=>15,'class'=>'Twig_Node_Expression_Binary_And','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'=='=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_Equal','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'!='=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_NotEqual','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'<'=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_Less','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'>'=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_Greater','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'>='=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_GreaterEqual','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'<='=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_LessEqual','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'not in'=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_NotIn','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'in'=>array('precedence'=>20,'class'=>'Twig_Node_Expression_Binary_In','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'..'=>array('precedence'=>25,'class'=>'Twig_Node_Expression_Binary_Range','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'+'=>array('precedence'=>30,'class'=>'Twig_Node_Expression_Binary_Add','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'-'=>array('precedence'=>30,'class'=>'Twig_Node_Expression_Binary_Sub','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'~'=>array('precedence'=>40,'class'=>'Twig_Node_Expression_Binary_Concat','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'*'=>array('precedence'=>60,'class'=>'Twig_Node_Expression_Binary_Mul','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'/'=>array('precedence'=>60,'class'=>'Twig_Node_Expression_Binary_Div','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'//'=>array('precedence'=>60,'class'=>'Twig_Node_Expression_Binary_FloorDiv','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'%'=>array('precedence'=>60,'class'=>'Twig_Node_Expression_Binary_Mod','associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'is'=>array('precedence'=>100,'callable'=>array($this,'parseTestExpression'),'associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'is not'=>array('precedence'=>100,'callable'=>array($this,'parseNotTestExpression'),'associativity'=>Twig_ExpressionParser::OPERATOR_LEFT),'**'=>array('precedence'=>200,'class'=>'Twig_Node_Expression_Binary_Power','associativity'=>Twig_ExpressionParser::OPERATOR_RIGHT),),);}function parseNotTestExpression(Twig_Parser$Q,$B){return new Twig_Node_Expression_Unary_Not($this->parseTestExpression($Q,$B),$Q->getCurrentToken()->getLine());}function parseTestExpression(Twig_Parser$Q,$B){$G=$Q->getStream();$C=$G->expect(Twig_Token::NAME_TYPE)->getValue();$N=null;if($G->test(Twig_Token::PUNCTUATION_TYPE,'(')){$N=$Q->getExpressionParser()->parseArguments();}$O=$this->getTestNodeClass($Q->getEnvironment(),$C);return new$O($B,$C,$N,$Q->getCurrentToken()->getLine());}protected function getTestNodeClass(Twig_Environment$H,$C){$tB=$H->getTests();if(isset($tB[$C])&&$tB[$C]instanceof Twig_Test_Node){return$tB[$C]->getClass();}return'Twig_Node_Expression_Test';}function getName(){return'core';}}function twig_cycle($L,$Z){if(!is_array($L)&&!$L instanceof ArrayAccess){return$L;}return$L[$Z%count($L)];}function twig_random(Twig_Environment$H,$L=null){if(null===$L){return mt_rand();}if(is_int($L)||is_float($L)){return$L<0?mt_rand($L,0):mt_rand(0,$L);}if($L instanceof Traversable){$L=iterator_to_array($L);}elseif(is_string($L)){if(''===$L){return'';}if(null!==$M=$H->getCharset()){if('UTF-8'!=$M){$L=twig_convert_encoding($L,'UTF-8',$M);}$L=preg_split('/(?<!^)(?!$)/u',$L);if('UTF-8'!=$M){foreach($L as$Z=>$F){$L[$Z]=twig_convert_encoding($F,$M,'UTF-8');}}}else{return$L[mt_rand(0,strlen($L)-1)];}}if(!is_array($L)){return$L;}if(0===count($L)){throw new Twig_Error_Runtime('The random function cannot pick from an empty array.');}return$L[array_rand($L,1)];}function twig_date_format_filter(Twig_Environment$H,$Y,$mB=null,$s=null){if(null===$mB){$KD=$H->getExtension('core')->getDateFormat();$mB=$Y instanceof DateInterval?$KD[1]:$KD[0];}if($Y instanceof DateInterval||$Y instanceof DateTime){if(null!==$s){$Y=clone$Y;$Y->setTimezone($s instanceof DateTimeZone?$s:new DateTimeZone($s));}return$Y->format($mB);}return twig_date_converter($H,$Y,$s)->format($mB);}function twig_date_modify_filter(Twig_Environment$H,$Y,$kD){if($Y instanceof DateTime){$Y=clone$Y;}else{$Y=twig_date_converter($H,$Y);}$Y->modify($kD);return$Y;}function twig_date_converter(Twig_Environment$H,$Y=null,$s=null){if(!$Y instanceof DateTime){$pB=(string)$Y;if(ctype_digit($pB)||(!empty($pB)&&'-'===$pB[0]&&ctype_digit(substr($pB,1)))){$Y=new DateTime('@'.$Y);}else{$Y=new DateTime($Y);}}else{$Y=clone$Y;}if(null!==$s){if($s instanceof DateTimeZone){$Y->setTimezone($s);}else{$Y->setTimezone(new DateTimeZone($s));}}elseif(($s=$H->getExtension('core')->getTimezone())instanceof DateTimeZone){$Y->setTimezone($s);}else{$Y->setTimezone(new DateTimeZone(date_default_timezone_get()));}return$Y;}function twig_number_format_filter(Twig_Environment$H,$cB,$GC=null,$BC=null,$_B=null){$CD=$H->getExtension('core')->getNumberFormat();if(null===$GC){$GC=$CD[0];}if(null===$BC){$BC=$CD[1];}if(null===$_B){$_B=$CD[2];}return number_format((float)$cB,$GC,$BC,$_B);}function twig_urlencode_filter($QD,$DD=false){if($DD){return rawurlencode($QD);}return urlencode($QD);}if(version_compare(PHP_VERSION,'5.3.0','<')){function twig_jsonencode_filter($F,$X=0){if($F instanceof Twig_Markup){$F=(string)$F;}elseif(is_array($F)){array_walk_recursive($F,'_twig_markup2string');}return json_encode($F);}}else{function twig_jsonencode_filter($F,$X=0){if($F instanceof Twig_Markup){$F=(string)$F;}elseif(is_array($F)){array_walk_recursive($F,'_twig_markup2string');}return json_encode($F,$X);}}function _twig_markup2string(&$F){if($F instanceof Twig_Markup){$F=(string)$F;}}function twig_array_merge($PD,$MD){if(!is_array($PD)||!is_array($MD)){throw new Twig_Error_Runtime('The merge filter only works with arrays or hashes.');}return array_merge($PD,$MD);}function twig_slice(Twig_Environment$H,$K,$LC,$JB=null,$XC=false){if($K instanceof Traversable){$K=iterator_to_array($K,false);}if(is_array($K)){return array_slice($K,$LC,$JB,$XC);}$K=(string)$K;if(function_exists('mb_get_info')&&null!==$M=$H->getCharset()){return mb_substr($K,$LC,null===$JB?mb_strlen($K,$M)-$LC:$JB,$M);}return null===$JB?substr($K,$LC):substr($K,$LC,$JB);}function twig_join_filter($F,$bD=''){if($F instanceof Traversable){$F=iterator_to_array($F,false);}return implode($bD,(array)$F);}function _twig_default_filter($F,$UC=''){if(twig_test_empty($F)){return$UC;}return$F;}function twig_get_array_keys_filter($XB){if(is_object($XB)&&$XB instanceof Traversable){return array_keys(iterator_to_array($XB));}if(!is_array($XB)){return array();}return array_keys($XB);}function twig_reverse_filter(Twig_Environment$H,$K,$XC=false){if(is_object($K)&&$K instanceof Traversable){return array_reverse(iterator_to_array($K),$XC);}if(is_array($K)){return array_reverse($K,$XC);}if(null!==$M=$H->getCharset()){$I=(string)$K;if('UTF-8'!=$M){$K=twig_convert_encoding($I,'UTF-8',$M);}preg_match_all('/./us',$K,$v);$I=implode('',array_reverse($v[0]));if('UTF-8'!=$M){$I=twig_convert_encoding($I,$M,'UTF-8');}return$I;}return strrev((string)$K);}function twig_sort_filter($XB){asort($XB);return$XB;}function twig_in_filter($F,$aB){if(is_array($aB)){return in_array($F,$aB);}elseif(is_string($aB)){if(!strlen((string)$F)){return empty($aB);}return false!==strpos($aB,(string)$F);}elseif(is_object($aB)&&$aB instanceof Traversable){return in_array($F,iterator_to_array($aB,false));}return false;}function twig_escape_filter(Twig_Environment$H,$I,$ED='html',$M=null,$_D=false){if($_D&&is_object($I)&&$I instanceof Twig_Markup){return$I;}if(!is_string($I)&&!(is_object($I)&&method_exists($I,'__toString'))){return$I;}if(null===$M){$M=$H->getCharset();}$I=(string)$I;switch($ED){case'js':if('UTF-8'!=$M){$I=twig_convert_encoding($I,'UTF-8',$M);}if(0==strlen($I)?false:(1==preg_match('/^./su',$I)?false:true)){throw new Twig_Error_Runtime('The string to escape is not a valid UTF-8 string.');}$I=preg_replace_callback('#[^a-zA-Z0-9,\._]#Su','_twig_escape_js_callback',$I);if('UTF-8'!=$M){$I=twig_convert_encoding($I,$M,'UTF-8');}return$I;case'css':if('UTF-8'!=$M){$I=twig_convert_encoding($I,'UTF-8',$M);}if(0==strlen($I)?false:(1==preg_match('/^./su',$I)?false:true)){throw new Twig_Error_Runtime('The string to escape is not a valid UTF-8 string.');}$I=preg_replace_callback('#[^a-zA-Z0-9]#Su','_twig_escape_css_callback',$I);if('UTF-8'!=$M){$I=twig_convert_encoding($I,$M,'UTF-8');}return$I;case'html_attr':if('UTF-8'!=$M){$I=twig_convert_encoding($I,'UTF-8',$M);}if(0==strlen($I)?false:(1==preg_match('/^./su',$I)?false:true)){throw new Twig_Error_Runtime('The string to escape is not a valid UTF-8 string.');}$I=preg_replace_callback('#[^a-zA-Z0-9,\.\-_]#Su','_twig_escape_html_attr_callback',$I);if('UTF-8'!=$M){$I=twig_convert_encoding($I,$M,'UTF-8');}return$I;case'html':static$PE=array('iso-8859-1'=>true,'iso8859-1'=>true,'iso-8859-15'=>true,'iso8859-15'=>true,'utf-8'=>true,'cp866'=>true,'ibm866'=>true,'866'=>true,'cp1251'=>true,'windows-1251'=>true,'win-1251'=>true,'1251'=>true,'cp1252'=>true,'windows-1252'=>true,'1252'=>true,'koi8-r'=>true,'koi8-ru'=>true,'koi8r'=>true,'big5'=>true,'950'=>true,'gb2312'=>true,'936'=>true,'big5-hkscs'=>true,'shift_jis'=>true,'sjis'=>true,'932'=>true,'euc-jp'=>true,'eucjp'=>true,'iso8859-5'=>true,'iso-8859-5'=>true,'macroman'=>true,);if(isset($PE[strtolower($M)])){return htmlspecialchars($I,ENT_QUOTES|ENT_SUBSTITUTE,$M);}$I=twig_convert_encoding($I,'UTF-8',$M);$I=htmlspecialchars($I,ENT_QUOTES|ENT_SUBSTITUTE,'UTF-8');return twig_convert_encoding($I,$M,'UTF-8');case'url':if(version_compare(PHP_VERSION,'5.3.0','<')){return str_replace('%7E','~',rawurlencode($I));}return rawurlencode($I);default:throw new Twig_Error_Runtime(sprintf('Invalid escaping strategy "%s" (valid ones: html, js, url, css, and html_attr).',$ED));}}function twig_escape_filter_is_safe(Twig_Node$FC){foreach($FC as$WB){if($WB instanceof Twig_Node_Expression_Constant){return array($WB->getAttribute('value'));}return array();}return array('html');}if(function_exists('mb_convert_encoding')){function twig_convert_encoding($I,$VC,$WC){return mb_convert_encoding($I,$VC,$WC);}}elseif(function_exists('iconv')){function twig_convert_encoding($I,$VC,$WC){return iconv($WC,$VC,$I);}}else{function twig_convert_encoding($I,$VC,$WC){throw new Twig_Error_Runtime('No suitable convert encoding function (use UTF-8 as your encoding or install the iconv or mbstring extension).');}}function _twig_escape_js_callback($v){$AB=$v[0];if(!isset($AB[1])){return'\\x'.strtoupper(substr('00'.bin2hex($AB),-2));}$AB=twig_convert_encoding($AB,'UTF-16BE','UTF-8');return'\\u'.strtoupper(substr('0000'.bin2hex($AB),-4));}function _twig_escape_css_callback($v){$AB=$v[0];if(!isset($AB[1])){$gB=ltrim(strtoupper(bin2hex($AB)),'0');if(0===strlen($gB)){$gB='0';}return'\\'.$gB.' ';}$AB=twig_convert_encoding($AB,'UTF-16BE','UTF-8');return'\\'.ltrim(strtoupper(bin2hex($AB)),'0').' ';}function _twig_escape_html_attr_callback($v){static$ND=array(34=>'quot',38=>'amp',60=>'lt',62=>'gt',);$TB=$v[0];$_C=ord($TB);if(($_C<=0x1f&&$TB!="\t"&&$TB!="\n"&&$TB!="\r")||($_C>=0x7f&&$_C<=0x9f)){return'&#xFFFD;';}if(strlen($TB)==1){$gB=strtoupper(substr('00'.bin2hex($TB),-2));}else{$TB=twig_convert_encoding($TB,'UTF-16BE','UTF-8');$gB=strtoupper(substr('0000'.bin2hex($TB),-4));}$OD=hexdec($gB);if(array_key_exists($OD,$ND)){return sprintf('&%s;',$ND[$OD]);}return sprintf('&#x%s;',$gB);}if(function_exists('mb_get_info')){function twig_length_filter(Twig_Environment$H,$fB){return is_scalar($fB)?mb_strlen($fB,$H->getCharset()):count($fB);}function twig_upper_filter(Twig_Environment$H,$I){if(null!==($M=$H->getCharset())){return mb_strtoupper($I,$M);}return strtoupper($I);}function twig_lower_filter(Twig_Environment$H,$I){if(null!==($M=$H->getCharset())){return mb_strtolower($I,$M);}return strtolower($I);}function twig_title_string_filter(Twig_Environment$H,$I){if(null!==($M=$H->getCharset())){return mb_convert_case($I,MB_CASE_TITLE,$M);}return ucwords(strtolower($I));}function twig_capitalize_string_filter(Twig_Environment$H,$I){if(null!==($M=$H->getCharset())){return mb_strtoupper(mb_substr($I,0,1,$M),$M).mb_strtolower(mb_substr($I,1,mb_strlen($I,$M),$M),$M);}return ucfirst(strtolower($I));}}else{function twig_length_filter(Twig_Environment$H,$fB){return is_scalar($fB)?strlen($fB):count($fB);}function twig_title_string_filter(Twig_Environment$H,$I){return ucwords(strtolower($I));}function twig_capitalize_string_filter(Twig_Environment$H,$I){return ucfirst(strtolower($I));}}function twig_ensure_traversable($jB){if($jB instanceof Traversable||is_array($jB)){return$jB;}return array();}function twig_test_empty($F){if($F instanceof Countable){return 0==count($F);}return false===$F||(empty($F)&&'0'!=$F);}function twig_test_iterable($F){return$F instanceof Traversable||is_array($F);}class Twig_Extension_Escaper extends Twig_Extension{protected$defaultStrategy;function __construct($lB='html'){$this->setDefaultStrategy($lB);}function getTokenParsers(){return array(new Twig_TokenParser_AutoEscape());}function getNodeVisitors(){return array(new Twig_NodeVisitor_Escaper());}function getFilters(){return array('raw'=>new Twig_Filter_Function('twig_raw_filter',array('is_safe'=>array('all'))),);}function setDefaultStrategy($lB){if(true===$lB){$lB='html';}$this->defaultStrategy=$lB;}function getDefaultStrategy($p){if(!is_string($this->defaultStrategy)&&is_callable($this->defaultStrategy)){return call_user_func($this->defaultStrategy,$p);}return$this->defaultStrategy;}function getName(){return'escaper';}}function twig_raw_filter($I){return$I;}class Twig_Extension_Sandbox extends Twig_Extension{protected$sandboxedGlobally;protected$sandboxed;protected$policy;function __construct(Twig_Sandbox_SecurityPolicyInterface$vC,$WE=false){$this->policy=$vC;$this->sandboxedGlobally=$WE;}function getTokenParsers(){return array(new Twig_TokenParser_Sandbox());}function getNodeVisitors(){return array(new Twig_NodeVisitor_Sandbox());}function enableSandbox(){$this->sandboxed=true;}function disableSandbox(){$this->sandboxed=false;}function isSandboxed(){return$this->sandboxedGlobally||$this->sandboxed;}function isSandboxedGlobally(){return$this->sandboxedGlobally;}function setSecurityPolicy(Twig_Sandbox_SecurityPolicyInterface$vC){$this->policy=$vC;}function getSecurityPolicy(){return$this->policy;}function checkSecurity($SB,$LB,$PB){if($this->isSandboxed()){$this->policy->checkSecurity($SB,$LB,$PB);}}function checkMethodAllowed($o,$b){if($this->isSandboxed()){$this->policy->checkMethodAllowed($o,$b);}}function checkPropertyAllowed($o,$b){if($this->isSandboxed()){$this->policy->checkPropertyAllowed($o,$b);}}function ensureToStringAllowed($o){if(is_object($o)){$this->policy->checkMethodAllowed($o,'__toString');}return$o;}function getName(){return'sandbox';}}class Twig_Extension_Debug extends Twig_Extension{function getFunctions(){$bE=extension_loaded('xdebug')&&(false===ini_get('xdebug.overload_var_dump')||ini_get('xdebug.overload_var_dump'))&&(false===ini_get('html_errors')||ini_get('html_errors'));return array('dump'=>new Twig_Function_Function('twig_var_dump',array('is_safe'=>$bE?array('html'):array(),'needs_context'=>true,'needs_environment'=>true)),);}function getName(){return'debug';}}function twig_var_dump(Twig_Environment$H,$U){if(!$H->isDebug()){return;}ob_start();$vB=func_num_args();if(2===$vB){$RB=array();foreach($U as$h=>$F){if(!$F instanceof Twig_Template){$RB[$h]=$F;}}var_dump($RB);}else{for($Z=2;$Z<$vB;$Z++){var_dump(func_get_arg($Z));}}return ob_get_clean();}abstract class Twig_Template implements Twig_TemplateInterface{static protected$cache=array();protected$parent;protected$parents;protected$env;protected$blocks;protected$traits;function __construct(Twig_Environment$H){$this->env=$H;$this->blocks=array();$this->traits=array();}abstract function getTemplateName();function getEnvironment(){return$this->env;}function getParent(array$U){if(null!==$this->parent){return$this->parent;}$i=$this->doGetParent($U);if(false===$i){return false;}elseif($i instanceof Twig_Template){$C=$i->getTemplateName();$this->parents[$C]=$i;$i=$C;}elseif(!isset($this->parents[$i])){$this->parents[$i]=$this->env->loadTemplate($i);}return$this->parents[$i];}protected function doGetParent(array$U){return false;}function isTraitable(){return true;}function displayParentBlock($C,array$U,array$g=array()){$C=(string)$C;if(isset($this->traits[$C])){$this->traits[$C][0]->displayBlock($C,$U,$g);}elseif(false!==$i=$this->getParent($U)){$i->displayBlock($C,$U,$g);}else{throw new Twig_Error_Runtime(sprintf('The template has no parent and no traits defining the "%s" block',$C),-1,$this->getTemplateName());}}function displayBlock($C,array$U,array$g=array()){$C=(string)$C;if(isset($g[$C])){$kB=$g;unset($kB[$C]);call_user_func($g[$C],$U,$kB);}elseif(isset($this->blocks[$C])){call_user_func($this->blocks[$C],$U,$g);}elseif(false!==$i=$this->getParent($U)){$i->displayBlock($C,$U,array_merge($this->blocks,$g));}}function renderParentBlock($C,array$U,array$g=array()){ob_start();$this->displayParentBlock($C,$U,$g);return ob_get_clean();}function renderBlock($C,array$U,array$g=array()){ob_start();$this->displayBlock($C,$U,$g);return ob_get_clean();}function hasBlock($C){return isset($this->blocks[(string)$C]);}function getBlockNames(){return array_keys($this->blocks);}function getBlocks(){return$this->blocks;}function display(array$U,array$g=array()){$this->displayWithErrorHandling($this->env->mergeGlobals($U),$g);}function render(array$U){$EC=ob_get_level();ob_start();try{$this->display($U);}catch(Exception$W){while(ob_get_level()>$EC){ob_end_clean();}throw$W;}return ob_get_clean();}protected function displayWithErrorHandling(array$U,array$g=array()){try{$this->doDisplay($U,$g);}catch(Twig_Error$W){throw$W;}catch(Exception$W){throw new Twig_Error_Runtime(sprintf('An exception has been thrown during the rendering of a template ("%s").',$W->getMessage()),-1,null,$W);}}abstract protected function doDisplay(array$U,array$g=array());final protected function getContext($U,$K,$JC=false){if(!array_key_exists($K,$U)){if($JC||!$this->env->isStrictVariables()){return null;}throw new Twig_Error_Runtime(sprintf('Variable "%s" does not exist',$K));}return$U[$K];}protected function getAttribute($e,$K,array$N=array(),$T=Twig_TemplateInterface::ANY_CALL,$xB=false,$JC=false){$K=ctype_digit((string)$K)?(int)$K:(string)$K;if(Twig_TemplateInterface::METHOD_CALL!==$T){if((is_array($e)&&array_key_exists($K,$e))||($e instanceof ArrayAccess&&isset($e[$K]))){if($xB){return true;}return$e[$K];}if(Twig_TemplateInterface::ARRAY_CALL===$T){if($xB){return false;}if($JC||!$this->env->isStrictVariables()){return null;}if(is_object($e)){throw new Twig_Error_Runtime(sprintf('Key "%s" in object (with ArrayAccess) of type "%s" does not exist',$K,get_class($e)));}elseif(is_array($e)){throw new Twig_Error_Runtime(sprintf('Key "%s" for array with keys "%s" does not exist',$K,implode(', ',array_keys($e))));}else{throw new Twig_Error_Runtime(sprintf('Impossible to access a key ("%s") on a "%s" variable',$K,gettype($e)));}}}if(!is_object($e)){if($xB){return false;}if($JC||!$this->env->isStrictVariables()){return null;}throw new Twig_Error_Runtime(sprintf('Item "%s" for "%s" does not exist',$K,is_array($e)?'Array':$e));}$O=get_class($e);if(Twig_TemplateInterface::METHOD_CALL!==$T){if(isset($e->$K)||array_key_exists($K,$e)){if($xB){return true;}if($this->env->hasExtension('sandbox')){$this->env->getExtension('sandbox')->checkPropertyAllowed($e,$K);}return$e->$K;}}if(!isset(self::$cache[$O]['methods'])){self::$cache[$O]['methods']=array_change_key_case(array_flip(get_class_methods($e)));}$wC=strtolower($K);if(isset(self::$cache[$O]['methods'][$wC])){$b=$K;}elseif(isset(self::$cache[$O]['methods']['get'.$wC])){$b='get'.$K;}elseif(isset(self::$cache[$O]['methods']['is'.$wC])){$b='is'.$K;}elseif(isset(self::$cache[$O]['methods']['__call'])){$b=$K;}else{if($xB){return false;}if($JC||!$this->env->isStrictVariables()){return null;}throw new Twig_Error_Runtime(sprintf('Method "%s" for object "%s" does not exist',$K,get_class($e)));}if($xB){return true;}if($this->env->hasExtension('sandbox')){$this->env->getExtension('sandbox')->checkMethodAllowed($e,$b);}$zC=call_user_func_array(array($e,$b),$N);if($e instanceof Twig_TemplateInterface){return$zC===''?'':new Twig_Markup($zC,$this->env->getCharset());}return$zC;}static function clearCache(){self::$cache=array();}}interface Twig_NodeOutputInterface{}interface Twig_TokenParserInterface{function setParser(Twig_Parser$Q);function parse(Twig_Token$D);function getTag();}interface Twig_LexerInterface{function tokenize($HD,$p=null);}interface Twig_NodeVisitorInterface{function enterNode(Twig_NodeInterface$B,Twig_Environment$H);function leaveNode(Twig_NodeInterface$B,Twig_Environment$H);function getPriority();}class Twig_Error extends Exception{protected$lineno;protected$filename;protected$rawMessage;protected$previous;function __construct($f,$E=-1,$p=null,Exception$JD=null){if(version_compare(PHP_VERSION,'5.3.0','<')){$this->previous=$JD;parent::__construct('');}else{parent::__construct('',0,$JD);}$this->lineno=$E;$this->filename=$p;if(-1===$this->lineno||null===$this->filename){$this->guessTemplateInfo();}$this->rawMessage=$f;$this->updateRepr();}function getRawMessage(){return$this->rawMessage;}function getTemplateFile(){return$this->filename;}function setTemplateFile($p){$this->filename=$p;$this->updateRepr();}function getTemplateLine(){return$this->lineno;}function setTemplateLine($E){$this->lineno=$E;$this->updateRepr();}function __call($b,$N){if('getprevious'==strtolower($b)){return$this->previous;}throw new BadMethodCallException(sprintf('Method "Twig_Error::%s()" does not exist.',$b));}protected function updateRepr(){$this->message=$this->rawMessage;$ID=false;if('.'===substr($this->message,-1)){$this->message=substr($this->message,0,-1);$ID=true;}if(null!==$this->filename){if(is_string($this->filename)||(is_object($this->filename)&&method_exists($this->filename,'__toString'))){$p=sprintf('"%s"',$this->filename);}else{$p=json_encode($this->filename);}$this->message.=sprintf(' in %s',$p);}if($this->lineno>=0){$this->message.=sprintf(' at line %d',$this->lineno);}if($ID){$this->message.='.';}}protected function guessTemplateInfo(){$n=null;foreach(debug_backtrace()as$OB){if(isset($OB['object'])&&$OB['object']instanceof Twig_Template&&'Twig_Template'!==get_class($OB['object'])){$n=$OB['object'];}}if(null!==$n&&null===$this->filename){$this->filename=$n->getTemplateName();}if(null===$n||$this->lineno>-1){return;}$KC=new ReflectionObject($n);$x=$KC->getFileName();$BB=array($W=$this);while(($W instanceof self||method_exists($W,'getPrevious'))&&$W=$W->getPrevious()){$BB[]=$W;}while($W=array_pop($BB)){$DE=$W->getTrace();while($OB=array_shift($DE)){if(!isset($OB['file'])||!isset($OB['line'])||$x!=$OB['file']){continue;}foreach($n->getDebugInfo()as$CE=>$BE){if($CE<=$OB['line']){$this->lineno=$BE;return;}}}}}}interface Twig_Sandbox_SecurityPolicyInterface{function checkSecurity($SB,$LB,$PB);function checkMethodAllowed($o,$b);function checkPropertyAllowed($o,$b);}class Twig_Sandbox_SecurityError extends Twig_Error{}class Twig_Sandbox_SecurityPolicy implements Twig_Sandbox_SecurityPolicyInterface{protected$allowedTags;protected$allowedFilters;protected$allowedMethods;protected$allowedProperties;protected$allowedFunctions;function __construct(array$GE=array(),array$KE=array(),array$UE=array(),array$IE=array(),array$ZE=array()){$this->allowedTags=$GE;$this->allowedFilters=$KE;$this->setAllowedMethods($UE);$this->allowedProperties=$IE;$this->allowedFunctions=$ZE;}function setAllowedTags(array$SB){$this->allowedTags=$SB;}function setAllowedFilters(array$LB){$this->allowedFilters=$LB;}function setAllowedMethods(array$xC){$this->allowedMethods=array();foreach($xC as$O=>$yC){$this->allowedMethods[$O]=array_map('strtolower',is_array($yC)?$yC:array($yC));}}function setAllowedProperties(array$MC){$this->allowedProperties=$MC;}function setAllowedFunctions(array$PB){$this->allowedFunctions=$PB;}function checkSecurity($SB,$LB,$PB){foreach($SB as$J){if(!in_array($J,$this->allowedTags)){throw new Twig_Sandbox_SecurityError(sprintf('Tag "%s" is not allowed.',$J));}}foreach($LB as$V){if(!in_array($V,$this->allowedFilters)){throw new Twig_Sandbox_SecurityError(sprintf('Filter "%s" is not allowed.',$V));}}foreach($PB as$d){if(!in_array($d,$this->allowedFunctions)){throw new Twig_Sandbox_SecurityError(sprintf('Function "%s" is not allowed.',$d));}}}function checkMethodAllowed($o,$b){if($o instanceof Twig_TemplateInterface||$o instanceof Twig_Markup){return true;}$NC=false;$b=strtolower($b);foreach($this->allowedMethods as$O=>$xC){if($o instanceof$O){$NC=in_array($b,$xC);break;}}if(!$NC){throw new Twig_Sandbox_SecurityError(sprintf('Calling "%s" method on a "%s" object is not allowed.',$b,get_class($o)));}}function checkPropertyAllowed($o,$WD){$NC=false;foreach($this->allowedProperties as$O=>$MC){if($o instanceof$O){$NC=in_array($WD,is_array($MC)?$MC:array($MC));break;}}if(!$NC){throw new Twig_Sandbox_SecurityError(sprintf('Calling "%s" property on a "%s" object is not allowed.',$WD,get_class($o)));}}}interface Twig_CompilerInterface{function compile(Twig_NodeInterface$B);function getSource();}class Twig_Test_Method implements Twig_TestInterface{protected$extension;protected$method;function __construct(Twig_ExtensionInterface$a,$b){$this->extension=$a;$this->method=$b;}function compile(){return sprintf('$this->env->getExtension(\'%s\')->%s',$this->extension->getName(),$this->method);}}class Twig_Test_Node implements Twig_TestInterface{protected$class;function __construct($O){$this->class=$O;}function getClass(){return$this->class;}function compile(){}}class Twig_Test_Function implements Twig_TestInterface{protected$function;function __construct($d){$this->function=$d;}function compile(){return$this->function;}}class Twig_Error_Syntax extends Twig_Error{}class Twig_Error_Loader extends Twig_Error{}class Twig_Error_Runtime extends Twig_Error{}class Twig_Environment{const VERSION='1.9.2-DEV';protected$charset;protected$loader;protected$debug;protected$autoReload;protected$cache;protected$lexer;protected$parser;protected$compiler;protected$baseTemplateClass;protected$extensions;protected$parsers;protected$visitors;protected$filters;protected$tests;protected$functions;protected$globals;protected$runtimeInitialized;protected$loadedTemplates;protected$strictVariables;protected$unaryOperators;protected$binaryOperators;protected$templateClassPrefix='__TwigTemplate_';protected$functionCallbacks;protected$filterCallbacks;protected$staging;function __construct(Twig_LoaderInterface$t=null,$X=array()){if(null!==$t){$this->setLoader($t);}$X=array_merge(array('debug'=>false,'charset'=>'UTF-8','base_template_class'=>'Twig_Template','strict_variables'=>false,'autoescape'=>'html','cache'=>false,'auto_reload'=>null,'optimizations'=>-1,),$X);$this->debug=(bool)$X['debug'];$this->charset=$X['charset'];$this->baseTemplateClass=$X['base_template_class'];$this->autoReload=null===$X['auto_reload']?$this->debug:(bool)$X['auto_reload'];$this->extensions=array('core'=>new Twig_Extension_Core(),'escaper'=>new Twig_Extension_Escaper($X['autoescape']),'optimizer'=>new Twig_Extension_Optimizer($X['optimizations']),);$this->strictVariables=(bool)$X['strict_variables'];$this->runtimeInitialized=false;$this->setCache($X['cache']);$this->functionCallbacks=array();$this->filterCallbacks=array();$this->staging=array('functions'=>array(),'filters'=>array(),'tests'=>array(),'token_parsers'=>array(),'visitors'=>array(),'globals'=>array(),);}function getBaseTemplateClass(){return$this->baseTemplateClass;}function setBaseTemplateClass($O){$this->baseTemplateClass=$O;}function enableDebug(){$this->debug=true;}function disableDebug(){$this->debug=false;}function isDebug(){return$this->debug;}function enableAutoReload(){$this->autoReload=true;}function disableAutoReload(){$this->autoReload=false;}function isAutoReload(){return$this->autoReload;}function enableStrictVariables(){$this->strictVariables=true;}function disableStrictVariables(){$this->strictVariables=false;}function isStrictVariables(){return$this->strictVariables;}function getCache(){return$this->cache;}function setCache($eB){$this->cache=$eB?$eB:false;}function getCacheFilename($C){if(false===$this->cache){return false;}$O=substr($this->getTemplateClass($C),strlen($this->templateClassPrefix));return$this->getCache().'/'.substr($O,0,2).'/'.substr($O,2,2).'/'.substr($O,4).'.php';}function getTemplateClass($C,$bB=null){return$this->templateClassPrefix.md5($this->loader->getCacheKey($C)).(null===$bB?'':'_'.$bB);}function getTemplateClassPrefix(){return$this->templateClassPrefix;}function render($C,array$U=array()){return$this->loadTemplate($C)->render($U);}function display($C,array$U=array()){$this->loadTemplate($C)->display($U);}function loadTemplate($C,$bB=null){$CC=$this->getTemplateClass($C,$bB);if(isset($this->loadedTemplates[$CC])){return$this->loadedTemplates[$CC];}if(!class_exists($CC,false)){if(false===$eB=$this->getCacheFilename($C)){eval('?>'.$this->compileSource($this->loader->getSource($C),$C));}else{if(!is_file($eB)||($this->isAutoReload()&&!$this->isTemplateFresh($C,filemtime($eB)))){$this->writeCacheFile($eB,$this->compileSource($this->loader->getSource($C),$C));}require_once$eB;}}if(!$this->runtimeInitialized){$this->initRuntime();}return$this->loadedTemplates[$CC]=new$CC($this);}function isTemplateFresh($C,$NB){foreach($this->extensions as$a){$KC=new ReflectionObject($a);if(filemtime($KC->getFileName())>$NB){return false;}}return$this->loader->isFresh($C,$NB);}function resolveTemplate($z){if(!is_array($z)){$z=array($z);}foreach($z as$C){if($C instanceof Twig_Template){return$C;}try{return$this->loadTemplate($C);}catch(Twig_Error_Loader$W){}}if(1===count($z)){throw$W;}throw new Twig_Error_Loader(sprintf('Unable to find one of the following templates: "%s".',implode('", "',$z)));}function clearTemplateCache(){$this->loadedTemplates=array();}function clearCacheFiles(){if(false===$this->cache){return;}foreach(new RecursiveIteratorIterator(new RecursiveDirectoryIterator($this->cache),RecursiveIteratorIterator::LEAVES_ONLY)as$x){if($x->isFile()){@unlink($x->getPathname());}}}function getLexer(){if(null===$this->lexer){$this->lexer=new Twig_Lexer($this);}return$this->lexer;}function setLexer(Twig_LexerInterface$aE){$this->lexer=$aE;}function tokenize($rC,$C=null){return$this->getLexer()->tokenize($rC,$C);}function getParser(){if(null===$this->parser){$this->parser=new Twig_Parser($this);}return$this->parser;}function setParser(Twig_ParserInterface$Q){$this->parser=$Q;}function parse(Twig_TokenStream$DC){return$this->getParser()->parse($DC);}function getCompiler(){if(null===$this->compiler){$this->compiler=new Twig_Compiler($this);}return$this->compiler;}function setCompiler(Twig_CompilerInterface$A){$this->compiler=$A;}function compile(Twig_NodeInterface$B){return$this->getCompiler()->compile($B)->getSource();}function compileSource($rC,$C=null){try{return$this->compile($this->parse($this->tokenize($rC,$C)));}catch(Twig_Error$W){$W->setTemplateFile($C);throw$W;}catch(Exception$W){throw new Twig_Error_Runtime(sprintf('An exception has been thrown during the compilation of a template ("%s").',$W->getMessage()),-1,$C,$W);}}function setLoader(Twig_LoaderInterface$t){$this->loader=$t;}function getLoader(){return$this->loader;}function setCharset($M){$this->charset=$M;}function getCharset(){return$this->charset;}function initRuntime(){$this->runtimeInitialized=true;foreach($this->getExtensions()as$a){$a->initRuntime($this);}}function hasExtension($C){return isset($this->extensions[$C]);}function getExtension($C){if(!isset($this->extensions[$C])){throw new Twig_Error_Runtime(sprintf('The "%s" extension is not enabled.',$C));}return$this->extensions[$C];}function addExtension(Twig_ExtensionInterface$a){$this->extensions[$a->getName()]=$a;$this->parsers=null;$this->visitors=null;$this->filters=null;$this->tests=null;$this->functions=null;$this->globals=null;}function removeExtension($C){unset($this->extensions[$C]);$this->parsers=null;$this->visitors=null;$this->filters=null;$this->tests=null;$this->functions=null;$this->globals=null;}function setExtensions(array$VE){foreach($VE as$a){$this->addExtension($a);}}function getExtensions(){return$this->extensions;}function addTokenParser(Twig_TokenParserInterface$Q){$this->staging['token_parsers'][]=$Q;$this->parsers=null;}function getTokenParsers(){if(null===$this->parsers){$this->parsers=new Twig_TokenParserBroker();if(isset($this->staging['token_parsers'])){foreach($this->staging['token_parsers']as$Q){$this->parsers->addTokenParser($Q);}}foreach($this->getExtensions()as$a){$sC=$a->getTokenParsers();foreach($sC as$Q){if($Q instanceof Twig_TokenParserInterface){$this->parsers->addTokenParser($Q);}elseif($Q instanceof Twig_TokenParserBrokerInterface){$this->parsers->addTokenParserBroker($Q);}else{throw new Twig_Error_Runtime('getTokenParsers() must return an array of Twig_TokenParserInterface or Twig_TokenParserBrokerInterface instances');}}}}return$this->parsers;}function getTags(){$SB=array();foreach($this->getTokenParsers()->getParsers()as$Q){if($Q instanceof Twig_TokenParserInterface){$SB[$Q->getTag()]=$Q;}}return$SB;}function addNodeVisitor(Twig_NodeVisitorInterface$l){$this->staging['visitors'][]=$l;$this->visitors=null;}function getNodeVisitors(){if(null===$this->visitors){foreach($this->getExtensions()as$a){foreach($a->getNodeVisitors()as$l){$this->addNodeVisitor($l);}}$this->visitors=$this->staging['visitors'];}return$this->visitors;}function addFilter($C,Twig_FilterInterface$V){$this->staging['filters'][$C]=$V;$this->filters=null;}function getFilter($C){if(null===$this->filters){$this->getFilters();}if(isset($this->filters[$C])){return$this->filters[$C];}foreach($this->filters as$iB=>$V){$iB=str_replace('\\*','(.*?)',preg_quote($iB,'#'),$vB);if($vB){if(preg_match('#^'.$iB.'$#',$C,$v)){array_shift($v);$V->setArguments($v);return$V;}}}foreach($this->filterCallbacks as$tC){if(false!==$V=call_user_func($tC,$C)){return$V;}}return false;}function registerUndefinedFilterCallback($uC){$this->filterCallbacks[]=$uC;}function getFilters(){if(null===$this->filters){foreach($this->getExtensions()as$a){foreach($a->getFilters()as$C=>$V){$this->addFilter($C,$V);}}$this->filters=$this->staging['filters'];}return$this->filters;}function addTest($C,Twig_TestInterface$_){$this->staging['tests'][$C]=$_;$this->tests=null;}function getTests(){if(null===$this->tests){foreach($this->getExtensions()as$a){foreach($a->getTests()as$C=>$_){$this->addTest($C,$_);}}$this->tests=$this->staging['tests'];}return$this->tests;}function addFunction($C,Twig_FunctionInterface$d){$this->staging['functions'][$C]=$d;$this->functions=null;}function getFunction($C){if(null===$this->functions){$this->getFunctions();}if(isset($this->functions[$C])){return$this->functions[$C];}foreach($this->functions as$iB=>$d){$iB=str_replace('\\*','(.*?)',preg_quote($iB,'#'),$vB);if($vB){if(preg_match('#^'.$iB.'$#',$C,$v)){array_shift($v);$d->setArguments($v);return$d;}}}foreach($this->functionCallbacks as$tC){if(false!==$d=call_user_func($tC,$C)){return$d;}}return false;}function registerUndefinedFunctionCallback($uC){$this->functionCallbacks[]=$uC;}function getFunctions(){if(null===$this->functions){foreach($this->getExtensions()as$a){foreach($a->getFunctions()as$C=>$d){$this->addFunction($C,$d);}}$this->functions=$this->staging['functions'];}return$this->functions;}function addGlobal($C,$F){$this->staging['globals'][$C]=$F;$this->globals=null;}function getGlobals(){if(null===$this->globals){$this->globals=isset($this->staging['globals'])?$this->staging['globals']:array();foreach($this->getExtensions()as$a){$this->globals=array_merge($this->globals,$a->getGlobals());}}return$this->globals;}function mergeGlobals(array$U){foreach($this->getGlobals()as$h=>$F){if(!array_key_exists($h,$U)){$U[$h]=$F;}}return$U;}function getUnaryOperators(){if(null===$this->unaryOperators){$this->initOperators();}return$this->unaryOperators;}function getBinaryOperators(){if(null===$this->binaryOperators){$this->initOperators();}return$this->binaryOperators;}function computeAlternatives($C,$QE){$DB=array();foreach($QE as$K){$UD=levenshtein($C,$K);if($UD<=strlen($C)/3||false!==strpos($K,$C)){$DB[$K]=$UD;}}asort($DB);return array_keys($DB);}protected function initOperators(){$this->unaryOperators=array();$this->binaryOperators=array();foreach($this->getExtensions()as$a){$GB=$a->getOperators();if(!$GB){continue;}if(2!==count($GB)){throw new InvalidArgumentException(sprintf('"%s::getOperators()" does not return a valid operators array.',get_class($a)));}$this->unaryOperators=array_merge($this->unaryOperators,$GB[0]);$this->binaryOperators=array_merge($this->binaryOperators,$GB[1]);}}protected function writeCacheFile($x,$AD){$uB=dirname($x);if(!is_dir($uB)){if(false===@mkdir($uB,0777,true)&&!is_dir($uB)){throw new RuntimeException(sprintf("Unable to create the cache directory (%s).",$uB));}}elseif(!is_writable($uB)){throw new RuntimeException(sprintf("Unable to write in the cache directory (%s).",$uB));}$SC=tempnam(dirname($x),basename($x));if(false!==@file_put_contents($SC,$AD)){if(@rename($SC,$x)||(@copy($SC,$x)&&unlink($SC))){@chmod($x,0666&~umask());return;}}throw new Twig_Error_Runtime(sprintf('Failed to write cache file "%s".',$x));}}class Twig_TokenStream{protected$tokens;protected$current;protected$filename;function __construct(array$DC,$p=null){$this->tokens=$DC;$this->current=0;$this->filename=$p;}function __toString(){return implode("\n",$this->tokens);}function injectTokens(array$DC){$this->tokens=array_merge(array_slice($this->tokens,0,$this->current),$DC,array_slice($this->tokens,$this->current));}function next(){if(!isset($this->tokens[++$this->current])){throw new Twig_Error_Syntax('Unexpected end of template',-1,$this->filename);}return$this->tokens[$this->current-1];}function expect($T,$F=null,$f=null){$D=$this->tokens[$this->current];if(!$D->test($T,$F)){$c=$D->getLine();throw new Twig_Error_Syntax(sprintf('%sUnexpected token "%s" of value "%s" ("%s" expected%s)',$f?$f.'. ':'',Twig_Token::typeToEnglish($D->getType(),$c),$D->getValue(),Twig_Token::typeToEnglish($T,$c),$F?sprintf(' with value "%s"',$F):''),$c,$this->filename);}$this->next();return$D;}function look($cB=1){if(!isset($this->tokens[$this->current+$cB])){throw new Twig_Error_Syntax('Unexpected end of template',-1,$this->filename);}return$this->tokens[$this->current+$cB];}function test($cE,$uD=null){return$this->tokens[$this->current]->test($cE,$uD);}function isEOF(){return$this->tokens[$this->current]->getType()===Twig_Token::EOF_TYPE;}function getCurrent(){return$this->tokens[$this->current];}function getFilename(){return$this->filename;}}interface Twig_ParserInterface{function parse(Twig_TokenStream$G);}interface Twig_TestInterface{function compile();}class Twig_Node implements Twig_NodeInterface{protected$nodes;protected$attributes;protected$lineno;protected$tag;function __construct(array$r=array(),array$RC=array(),$E=0,$J=null){$this->nodes=$r;$this->attributes=$RC;$this->lineno=$E;$this->tag=$J;}function __toString(){$RC=array();foreach($this->attributes as$C=>$F){$RC[]=sprintf('%s: %s',$C,str_replace("\n",'',var_export($F,true)));}$QC=array(get_class($this).'('.implode(', ',$RC));if(count($this->nodes)){foreach($this->nodes as$C=>$B){$iD=strlen($C)+4;$XD=array();foreach(explode("\n",(string)$B)as$c){$XD[]=str_repeat(' ',$iD).$c;}$QC[]=sprintf('  %s: %s',$C,ltrim(implode("\n",$XD)));}$QC[]=')';}else{$QC[0].=')';}return implode("\n",$QC);}function toXml($eD=false){$VB=new DOMDocument('1.0','UTF-8');$VB->formatOutput=true;$VB->appendChild($tD=$VB->createElement('twig'));$tD->appendChild($B=$VB->createElement('node'));$B->setAttribute('class',get_class($this));foreach($this->attributes as$C=>$F){$B->appendChild($PC=$VB->createElement('attribute'));$PC->setAttribute('name',$C);$PC->appendChild($VB->createTextNode($F));}foreach($this->nodes as$C=>$k){if(null===$k){continue;}$OC=$k->toXml(true)->getElementsByTagName('node')->item(0);$OC=$VB->importNode($OC,true);$OC->setAttribute('name',$C);$B->appendChild($OC);}return$eD?$VB:$VB->saveXml();}function compile(Twig_Compiler$A){foreach($this->nodes as$B){$B->compile($A);}}function getLine(){return$this->lineno;}function getNodeTag(){return$this->tag;}function hasAttribute($C){return array_key_exists($C,$this->attributes);}function getAttribute($C){if(!array_key_exists($C,$this->attributes)){throw new Twig_Error_Runtime(sprintf('Attribute "%s" does not exist for Node "%s".',$C,get_class($this)));}return$this->attributes[$C];}function setAttribute($C,$F){$this->attributes[$C]=$F;}function removeAttribute($C){unset($this->attributes[$C]);}function hasNode($C){return array_key_exists($C,$this->nodes);}function getNode($C){if(!array_key_exists($C,$this->nodes)){throw new Twig_Error_Runtime(sprintf('Node "%s" does not exist for Node "%s".',$C,get_class($this)));}return$this->nodes[$C];}function setNode($C,$B=null){$this->nodes[$C]=$B;}function removeNode($C){unset($this->nodes[$C]);}function count(){return count($this->nodes);}function getIterator(){return new ArrayIterator($this->nodes);}}class Twig_Compiler implements Twig_CompilerInterface{protected$lastLine;protected$source;protected$indentation;protected$env;protected$debugInfo;protected$sourceOffset;protected$sourceLine;function __construct(Twig_Environment$H){$this->env=$H;$this->debugInfo=array();}function getEnvironment(){return$this->env;}function getSource(){return$this->source;}function compile(Twig_NodeInterface$B,$rD=0){$this->lastLine=null;$this->source='';$this->sourceOffset=0;$this->sourceLine=0;$this->indentation=$rD;$B->compile($this);return$this;}function subcompile(Twig_NodeInterface$B,$DD=true){if(false===$DD){$this->addIndentation();}$B->compile($this);return$this;}function raw($I){$this->source.=$I;return$this;}function write(){$YE=func_get_args();foreach($YE as$I){$this->addIndentation();$this->source.=$I;}return$this;}function addIndentation(){$this->source.=str_repeat(' ',$this->indentation*4);return$this;}function string($F){$this->source.=sprintf('"%s"',addcslashes($F,"\0\t\"\$\\"));return$this;}function repr($F){if(is_int($F)||is_float($F)){if(false!==$YD=setlocale(LC_NUMERIC,0)){setlocale(LC_NUMERIC,'C');}$this->raw($F);if(false!==$YD){setlocale(LC_NUMERIC,$YD);}}elseif(null===$F){$this->raw('null');}elseif(is_bool($F)){$this->raw($F?'true':'false');}elseif(is_array($F)){$this->raw('array(');$Z=0;foreach($F as$h=>$F){if($Z++){$this->raw(', ');}$this->repr($h);$this->raw(' => ');$this->repr($F);}$this->raw(')');}else{$this->string($F);}return$this;}function addDebugInfo(Twig_NodeInterface$B){if($B->getLine()!=$this->lastLine){if(((int)ini_get('mbstring.func_overload'))&2){$this->sourceLine+=mb_substr_count(mb_substr($this->source,$this->sourceOffset),"\n");}else{$this->sourceLine+=substr_count($this->source,"\n",$this->sourceOffset);}$this->sourceOffset=strlen($this->source);$this->debugInfo[$this->sourceLine]=$B->getLine();$this->lastLine=$B->getLine();$this->write("// line {$B->getLine()}\n");}return$this;}function getDebugInfo(){return$this->debugInfo;}function indent($bC=1){$this->indentation+=$bC;return$this;}function outdent($bC=1){if($this->indentation<$bC){throw new Twig_Error('Unable to call outdent() as the indentation would become negative');}$this->indentation-=$bC;return$this;}}interface Twig_FunctionInterface{function compile();function needsEnvironment();function needsContext();function getSafe(Twig_Node$FC);function setArguments($N);function getArguments();}class Twig_Markup implements Countable{protected$content;protected$charset;function __construct($AD,$M){$this->content=(string)$AD;$this->charset=$M;}function __toString(){return$this->content;}function count(){return function_exists('mb_get_info')?mb_strlen($this->content,$this->charset):strlen($this->content);}}class Twig_TokenParserBroker implements Twig_TokenParserBrokerInterface{protected$parser;protected$parsers=array();protected$brokers=array();function __construct($sC=array(),$vD=array()){foreach($sC as$Q){if(!$Q instanceof Twig_TokenParserInterface){throw new Twig_Error('$parsers must a an array of Twig_TokenParserInterface');}$this->parsers[$Q->getTag()]=$Q;}foreach($vD as$HB){if(!$HB instanceof Twig_TokenParserBrokerInterface){throw new Twig_Error('$brokers must a an array of Twig_TokenParserBrokerInterface');}$this->brokers[]=$HB;}}function addTokenParser(Twig_TokenParserInterface$Q){$this->parsers[$Q->getTag()]=$Q;}function addTokenParserBroker(Twig_TokenParserBroker$HB){$this->brokers[]=$HB;}function getTokenParser($J){if(isset($this->parsers[$J])){return$this->parsers[$J];}$HB=end($this->brokers);while(false!==$HB){$Q=$HB->getTokenParser($J);if(null!==$Q){return$Q;}$HB=prev($this->brokers);}return null;}function getParsers(){return$this->parsers;}function getParser(){return$this->parser;}function setParser(Twig_ParserInterface$Q){$this->parser=$Q;foreach($this->parsers as$aD){$aD->setParser($Q);}foreach($this->brokers as$HB){$HB->setParser($Q);}}}class Twig_TokenParser_Spaceless extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideSpacelessEnd'),true);$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_Spaceless($R,$E,$this->getTag());}function decideSpacelessEnd(Twig_Token$D){return$D->test('endspaceless');}function getTag(){return'spaceless';}}class Twig_TokenParser_Flush extends Twig_TokenParser{function parse(Twig_Token$D){$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_Flush($D->getLine(),$this->getTag());}function getTag(){return'flush';}}class Twig_TokenParser_AutoEscape extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();if($this->parser->getStream()->test(Twig_Token::BLOCK_END_TYPE)){$F='html';}else{$S=$this->parser->getExpressionParser()->parseExpression();if(!$S instanceof Twig_Node_Expression_Constant){throw new Twig_Error_Syntax('An escaping strategy must be a string or a Boolean.',$E);}$F=$S->getAttribute('value');$fD=true===$F||false===$F;if(true===$F){$F='html';}if($fD&&$this->parser->getStream()->test(Twig_Token::NAME_TYPE)){if(false===$F){throw new Twig_Error_Syntax('Unexpected escaping strategy as you set autoescaping to false.',$E);}$F=$this->parser->getStream()->next()->getValue();}}$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideBlockEnd'),true);$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_AutoEscape($F,$R,$E,$this->getTag());}function decideBlockEnd(Twig_Token$D){return$D->test('endautoescape');}function getTag(){return'autoescape';}}class Twig_TokenParser_Macro extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();$C=$this->parser->getStream()->expect(Twig_Token::NAME_TYPE)->getValue();$N=$this->parser->getExpressionParser()->parseArguments();$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$this->parser->pushLocalScope();$R=$this->parser->subparse(array($this,'decideBlockEnd'),true);if($this->parser->getStream()->test(Twig_Token::NAME_TYPE)){$F=$this->parser->getStream()->next()->getValue();if($F!=$C){throw new Twig_Error_Syntax(sprintf("Expected endmacro for macro '$C' (but %s given)",$F),$E);}}$this->parser->popLocalScope();$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$this->parser->setMacro($C,new Twig_Node_Macro($C,new Twig_Node_Body(array($R)),$N,$E,$this->getTag()));return null;}function decideBlockEnd(Twig_Token$D){return$D->test('endmacro');}function getTag(){return'macro';}}class Twig_TokenParser_Include extends Twig_TokenParser{function parse(Twig_Token$D){$S=$this->parser->getExpressionParser()->parseExpression();list($KB,$IB,$EB)=$this->parseArguments();return new Twig_Node_Include($S,$KB,$IB,$EB,$D->getLine(),$this->getTag());}protected function parseArguments(){$G=$this->parser->getStream();$EB=false;if($G->test(Twig_Token::NAME_TYPE,'ignore')){$G->next();$G->expect(Twig_Token::NAME_TYPE,'missing');$EB=true;}$KB=null;if($G->test(Twig_Token::NAME_TYPE,'with')){$G->next();$KB=$this->parser->getExpressionParser()->parseExpression();}$IB=false;if($G->test(Twig_Token::NAME_TYPE,'only')){$G->next();$IB=true;}$G->expect(Twig_Token::BLOCK_END_TYPE);return array($KB,$IB,$EB);}function getTag(){return'include';}}class Twig_TokenParser_Filter extends Twig_TokenParser{function parse(Twig_Token$D){$C=$this->parser->getVarName();$TE=new Twig_Node_Expression_BlockReference(new Twig_Node_Expression_Constant($C,$D->getLine()),true,$D->getLine(),$this->getTag());$V=$this->parser->getExpressionParser()->parseFilterExpressionRaw($TE,$this->getTag());$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideBlockEnd'),true);$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$pC=new Twig_Node_Block($C,$R,$D->getLine());$this->parser->setBlock($C,$pC);return new Twig_Node_Print($V,$D->getLine(),$this->getTag());}function decideBlockEnd(Twig_Token$D){return$D->test('endfilter');}function getTag(){return'filter';}}class Twig_TokenParser_Do extends Twig_TokenParser{function parse(Twig_Token$D){$S=$this->parser->getExpressionParser()->parseExpression();$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_Do($S,$D->getLine(),$this->getTag());}function getTag(){return'do';}}class Twig_TokenParser_If extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();$S=$this->parser->getExpressionParser()->parseExpression();$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideIfFork'));$HC=array($S,$R);$MB=null;$VD=false;while(!$VD){switch($this->parser->getStream()->next()->getValue()){case'else':$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$MB=$this->parser->subparse(array($this,'decideIfEnd'));break;case'elseif':$S=$this->parser->getExpressionParser()->parseExpression();$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideIfFork'));$HC[]=$S;$HC[]=$R;break;case'endif':$VD=true;break;default:throw new Twig_Error_Syntax(sprintf('Unexpected end of template. Twig was looking for the following tags "else", "elseif", or "endif" to close the "if" block started at line %d)',$E),-1);}}$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_If(new Twig_Node($HC),$MB,$E,$this->getTag());}function decideIfFork(Twig_Token$D){return$D->test(array('elseif','else','endif'));}function decideIfEnd(Twig_Token$D){return$D->test(array('endif'));}function getTag(){return'if';}}class Twig_TokenParser_From extends Twig_TokenParser{function parse(Twig_Token$D){$hC=$this->parser->getExpressionParser()->parseExpression();$G=$this->parser->getStream();$G->expect('import');$q=array();do{$C=$G->expect(Twig_Token::NAME_TYPE)->getValue();$u=$C;if($G->test('as')){$G->next();$u=$G->expect(Twig_Token::NAME_TYPE)->getValue();}$q[$C]=$u;if(!$G->test(Twig_Token::PUNCTUATION_TYPE,',')){break;}$G->next();}while(true);$G->expect(Twig_Token::BLOCK_END_TYPE);$B=new Twig_Node_Import($hC,new Twig_Node_Expression_AssignName($this->parser->getVarName(),$D->getLine()),$D->getLine(),$this->getTag());foreach($q as$C=>$u){$this->parser->addImportedFunction($u,'get'.$C,$B->getNode('var'));}return$B;}function getTag(){return'from';}}class Twig_TokenParser_Block extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();$G=$this->parser->getStream();$C=$G->expect(Twig_Token::NAME_TYPE)->getValue();if($this->parser->hasBlock($C)){throw new Twig_Error_Syntax(sprintf("The block '$C' has already been defined line %d",$this->parser->getBlock($C)->getLine()),$E);}$this->parser->setBlock($C,$pC=new Twig_Node_Block($C,new Twig_Node(array()),$E));$this->parser->pushLocalScope();$this->parser->pushBlockStack($C);if($G->test(Twig_Token::BLOCK_END_TYPE)){$G->next();$R=$this->parser->subparse(array($this,'decideBlockEnd'),true);if($G->test(Twig_Token::NAME_TYPE)){$F=$G->next()->getValue();if($F!=$C){throw new Twig_Error_Syntax(sprintf("Expected endblock for block '$C' (but %s given)",$F),$E);}}}else{$R=new Twig_Node(array(new Twig_Node_Print($this->parser->getExpressionParser()->parseExpression(),$E),));}$G->expect(Twig_Token::BLOCK_END_TYPE);$pC->setNode('body',$R);$this->parser->popBlockStack();$this->parser->popLocalScope();return new Twig_Node_BlockReference($C,$E,$this->getTag());}function decideBlockEnd(Twig_Token$D){return$D->test('endblock');}function getTag(){return'block';}}class Twig_TokenParser_Extends extends Twig_TokenParser{function parse(Twig_Token$D){if(!$this->parser->isMainScope()){throw new Twig_Error_Syntax('Cannot extend from a block',$D->getLine());}if(null!==$this->parser->getParent()){throw new Twig_Error_Syntax('Multiple extends tags are forbidden',$D->getLine());}$this->parser->setParent($this->parser->getExpressionParser()->parseExpression());$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return null;}function getTag(){return'extends';}}class Twig_TokenParser_Sandbox extends Twig_TokenParser{function parse(Twig_Token$D){$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideBlockEnd'),true);$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_Sandbox($R,$D->getLine(),$this->getTag());}function decideBlockEnd(Twig_Token$D){return$D->test('endsandbox');}function getTag(){return'sandbox';}}class Twig_TokenParser_For extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();$q=$this->parser->getExpressionParser()->parseAssignmentExpression();$this->parser->getStream()->expect(Twig_Token::OPERATOR_TYPE,'in');$jB=$this->parser->getExpressionParser()->parseExpression();$sB=null;if($this->parser->getStream()->test(Twig_Token::NAME_TYPE,'if')){$this->parser->getStream()->next();$sB=$this->parser->getExpressionParser()->parseExpression();}$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$R=$this->parser->subparse(array($this,'decideForFork'));if($this->parser->getStream()->next()->getValue()=='else'){$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);$MB=$this->parser->subparse(array($this,'decideForEnd'),true);}else{$MB=null;}$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);if(count($q)>1){$hB=$q->getNode(0);$hB=new Twig_Node_Expression_AssignName($hB->getAttribute('name'),$hB->getLine());$FB=$q->getNode(1);$FB=new Twig_Node_Expression_AssignName($FB->getAttribute('name'),$FB->getLine());}else{$hB=new Twig_Node_Expression_AssignName('_key',$E);$FB=$q->getNode(0);$FB=new Twig_Node_Expression_AssignName($FB->getAttribute('name'),$FB->getLine());}return new Twig_Node_For($hB,$FB,$jB,$sB,$R,$MB,$E,$this->getTag());}function decideForFork(Twig_Token$D){return$D->test(array('else','endfor'));}function decideForEnd(Twig_Token$D){return$D->test('endfor');}function getTag(){return'for';}}class Twig_TokenParser_Import extends Twig_TokenParser{function parse(Twig_Token$D){$hC=$this->parser->getExpressionParser()->parseExpression();$this->parser->getStream()->expect('as');$QB=new Twig_Node_Expression_AssignName($this->parser->getStream()->expect(Twig_Token::NAME_TYPE)->getValue(),$D->getLine());$this->parser->getStream()->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_Import($hC,$QB,$D->getLine(),$this->getTag());}function getTag(){return'import';}}class Twig_TokenParser_Embed extends Twig_TokenParser_Include{function parse(Twig_Token$D){$G=$this->parser->getStream();$i=$this->parser->getExpressionParser()->parseExpression();list($KB,$IB,$EB)=$this->parseArguments();$G->injectTokens(array(new Twig_Token(Twig_Token::BLOCK_START_TYPE,'',$D->getLine()),new Twig_Token(Twig_Token::NAME_TYPE,'extends',$D->getLine()),new Twig_Token(Twig_Token::STRING_TYPE,'__parent__',$D->getLine()),new Twig_Token(Twig_Token::BLOCK_END_TYPE,'',$D->getLine()),));$fC=$this->parser->parse($G,array($this,'decideBlockEnd'),true);$fC->setNode('parent',$i);$this->parser->embedTemplate($fC);$G->expect(Twig_Token::BLOCK_END_TYPE);return new Twig_Node_Embed($fC->getAttribute('filename'),$fC->getAttribute('index'),$KB,$IB,$EB,$D->getLine(),$this->getTag());}function decideBlockEnd(Twig_Token$D){return$D->test('endembed');}function getTag(){return'embed';}}class Twig_TokenParser_Use extends Twig_TokenParser{function parse(Twig_Token$D){$n=$this->parser->getExpressionParser()->parseExpression();if(!$n instanceof Twig_Node_Expression_Constant){throw new Twig_Error_Syntax('The template references in a "use" statement must be a string.',$D->getLine());}$G=$this->parser->getStream();$q=array();if($G->test('with')){$G->next();do{$C=$G->expect(Twig_Token::NAME_TYPE)->getValue();$u=$C;if($G->test('as')){$G->next();$u=$G->expect(Twig_Token::NAME_TYPE)->getValue();}$q[$C]=new Twig_Node_Expression_Constant($u,-1);if(!$G->test(Twig_Token::PUNCTUATION_TYPE,',')){break;}$G->next();}while(true);}$G->expect(Twig_Token::BLOCK_END_TYPE);$this->parser->addTrait(new Twig_Node(array('template'=>$n,'targets'=>new Twig_Node($q))));return null;}function getTag(){return'use';}}class Twig_TokenParser_Set extends Twig_TokenParser{function parse(Twig_Token$D){$E=$D->getLine();$G=$this->parser->getStream();$z=$this->parser->getExpressionParser()->parseAssignmentExpression();$eC=false;if($G->test(Twig_Token::OPERATOR_TYPE,'=')){$G->next();$L=$this->parser->getExpressionParser()->parseMultitargetExpression();$G->expect(Twig_Token::BLOCK_END_TYPE);if(count($z)!==count($L)){throw new Twig_Error_Syntax("When using set, you must have the same number of variables and assignements.",$E);}}else{$eC=true;if(count($z)>1){throw new Twig_Error_Syntax("When using set with a block, you cannot have a multi-target.",$E);}$G->expect(Twig_Token::BLOCK_END_TYPE);$L=$this->parser->subparse(array($this,'decideBlockEnd'),true);$G->expect(Twig_Token::BLOCK_END_TYPE);}return new Twig_Node_Set($eC,$z,$L,$E,$this->getTag());}function decideBlockEnd(Twig_Token$D){return$D->test('endset');}function getTag(){return'set';}}class Twig_Loader_Chain implements Twig_LoaderInterface{protected$loaders;function __construct(array$XE=array()){$this->loaders=array();foreach($XE as$t){$this->addLoader($t);}}function addLoader(Twig_LoaderInterface$t){$this->loaders[]=$t;}function getSource($C){$BB=array();foreach($this->loaders as$t){try{return$t->getSource($C);}catch(Twig_Error_Loader$W){$BB[]=$W->getMessage();}}throw new Twig_Error_Loader(sprintf('Template "%s" is not defined (%s).',$C,implode(', ',$BB)));}function getCacheKey($C){$BB=array();foreach($this->loaders as$t){try{return$t->getCacheKey($C);}catch(Twig_Error_Loader$W){$BB[]=get_class($t).': '.$W->getMessage();}}throw new Twig_Error_Loader(sprintf('Template "%s" is not defined (%s).',$C,implode(' ',$BB)));}function isFresh($C,$NB){$BB=array();foreach($this->loaders as$t){try{return$t->isFresh($C,$NB);}catch(Twig_Error_Loader$W){$BB[]=get_class($t).': '.$W->getMessage();}}throw new Twig_Error_Loader(sprintf('Template "%s" is not defined (%s).',$C,implode(' ',$BB)));}}class Twig_Loader_Array implements Twig_LoaderInterface{protected$templates;function __construct(array$FE){$this->templates=array();foreach($FE as$C=>$n){$this->templates[$C]=$n;}}function setTemplate($C,$n){$this->templates[(string)$C]=$n;}function getSource($C){$C=(string)$C;if(!isset($this->templates[$C])){throw new Twig_Error_Loader(sprintf('Template "%s" is not defined.',$C));}return$this->templates[$C];}function getCacheKey($C){$C=(string)$C;if(!isset($this->templates[$C])){throw new Twig_Error_Loader(sprintf('Template "%s" is not defined.',$C));}return$this->templates[$C];}function isFresh($C,$NB){$C=(string)$C;if(!isset($this->templates[$C])){throw new Twig_Error_Loader(sprintf('Template "%s" is not defined.',$C));}return true;}}class Twig_Loader_String implements Twig_LoaderInterface{function getSource($C){return$C;}function getCacheKey($C){return$C;}function isFresh($C,$NB){return true;}}class Twig_Loader_Filesystem implements Twig_LoaderInterface{protected$paths;protected$cache;function __construct($qB){$this->setPaths($qB);}function getPaths(){return$this->paths;}function setPaths($qB){if(!is_array($qB)){$qB=array($qB);}$this->paths=array();foreach($qB as$YB){$this->addPath($YB);}}function addPath($YB){$this->cache=array();if(!is_dir($YB)){throw new Twig_Error_Loader(sprintf('The "%s" directory does not exist.',$YB));}$this->paths[]=rtrim($YB,'/\\');}function getSource($C){return file_get_contents($this->findTemplate($C));}function getCacheKey($C){return$this->findTemplate($C);}function isFresh($C,$NB){return filemtime($this->findTemplate($C))<=$NB;}protected function findTemplate($C){$C=preg_replace('#/{2,}#','/',strtr($C,'\\','/'));if(isset($this->cache[$C])){return$this->cache[$C];}$this->validateName($C);foreach($this->paths as$YB){if(is_file($YB.'/'.$C)){return$this->cache[$C]=$YB.'/'.$C;}}throw new Twig_Error_Loader(sprintf('Unable to find template "%s" (looked into: %s).',$C,implode(', ',$this->paths)));}protected function validateName($C){if(false!==strpos($C,"\0")){throw new Twig_Error_Loader('A template name cannot contain NUL bytes.');}$JE=explode('/',$C);$EC=0;foreach($JE as$SD){if('..'===$SD){--$EC;}elseif('.'!==$SD){++$EC;}if($EC<0){throw new Twig_Error_Loader(sprintf('Looks like you try to load a template outside configured directories (%s).',$C));}}}}class Twig_NodeVisitor_Optimizer implements Twig_NodeVisitorInterface{const OPTIMIZE_ALL=-1;const OPTIMIZE_NONE=0;const OPTIMIZE_FOR=2;const OPTIMIZE_RAW_FILTER=4;const OPTIMIZE_VAR_ACCESS=8;protected$loops=array();protected$optimizers;protected$prependedNodes=array();protected$inABody=false;function __construct($yB=-1){if(!is_int($yB)||$yB>2){throw new InvalidArgumentException(sprintf('Optimizer mode "%s" is not valid.',$yB));}$this->optimizers=$yB;}function enterNode(Twig_NodeInterface$B,Twig_Environment$H){if(self::OPTIMIZE_FOR===(self::OPTIMIZE_FOR&$this->optimizers)){$this->enterOptimizeFor($B,$H);}if(!version_compare(phpversion(),'5.4.0RC1','>=')&&self::OPTIMIZE_VAR_ACCESS===(self::OPTIMIZE_VAR_ACCESS&$this->optimizers)&&!$H->isStrictVariables()&&!$H->hasExtension('sandbox')){if($this->inABody){if(!$B instanceof Twig_Node_Expression){if(get_class($B)!=='Twig_Node'){array_unshift($this->prependedNodes,array());}}else{$B=$this->optimizeVariables($B,$H);}}elseif($B instanceof Twig_Node_Body){$this->inABody=true;}}return$B;}function leaveNode(Twig_NodeInterface$B,Twig_Environment$H){$ZB=$B instanceof Twig_Node_Expression;if(self::OPTIMIZE_FOR===(self::OPTIMIZE_FOR&$this->optimizers)){$this->leaveOptimizeFor($B,$H);}if(self::OPTIMIZE_RAW_FILTER===(self::OPTIMIZE_RAW_FILTER&$this->optimizers)){$B=$this->optimizeRawFilter($B,$H);}$B=$this->optimizePrintNode($B,$H);if(self::OPTIMIZE_VAR_ACCESS===(self::OPTIMIZE_VAR_ACCESS&$this->optimizers)&&!$H->isStrictVariables()&&!$H->hasExtension('sandbox')){if($B instanceof Twig_Node_Body){$this->inABody=false;}elseif($this->inABody){if(!$ZB&&get_class($B)!=='Twig_Node'&&$LE=array_shift($this->prependedNodes)){$r=array();foreach(array_unique($LE)as$C){$r[]=new Twig_Node_SetTemp($C,$B->getLine());}$r[]=$B;$B=new Twig_Node($r);}}}return$B;}protected function optimizeVariables($B,$H){if('Twig_Node_Expression_Name'===get_class($B)&&$B->isSimple()){$this->prependedNodes[0][]=$B->getAttribute('name');return new Twig_Node_Expression_TempName($B->getAttribute('name'),$B->getLine());}return$B;}protected function optimizePrintNode($B,$H){if(!$B instanceof Twig_Node_Print){return$B;}if($B->getNode('expr')instanceof Twig_Node_Expression_BlockReference||$B->getNode('expr')instanceof Twig_Node_Expression_Parent){$B->getNode('expr')->setAttribute('output',true);return$B->getNode('expr');}return$B;}protected function optimizeRawFilter($B,$H){if($B instanceof Twig_Node_Expression_Filter&&'raw'==$B->getNode('filter')->getAttribute('value')){return$B->getNode('node');}return$B;}protected function enterOptimizeFor($B,$H){if($B instanceof Twig_Node_For){$B->setAttribute('with_loop',false);array_unshift($this->loops,$B);}elseif(!$this->loops){return;}elseif($B instanceof Twig_Node_Expression_Name&&'loop'===$B->getAttribute('name')){$this->addLoopToCurrent();}elseif($B instanceof Twig_Node_BlockReference||$B instanceof Twig_Node_Expression_BlockReference){$this->addLoopToCurrent();}elseif($B instanceof Twig_Node_Include&&!$B->getAttribute('only')){$this->addLoopToAll();}elseif($B instanceof Twig_Node_Expression_GetAttr&&(!$B->getNode('attribute')instanceof Twig_Node_Expression_Constant||'parent'===$B->getNode('attribute')->getAttribute('value'))&&(true===$this->loops[0]->getAttribute('with_loop')||($B->getNode('node')instanceof Twig_Node_Expression_Name&&'loop'===$B->getNode('node')->getAttribute('name')))){$this->addLoopToAll();}}protected function leaveOptimizeFor($B,$H){if($B instanceof Twig_Node_For){array_shift($this->loops);}}protected function addLoopToCurrent(){$this->loops[0]->setAttribute('with_loop',true);}protected function addLoopToAll(){foreach($this->loops as$ME){$ME->setAttribute('with_loop',true);}}function getPriority(){return 255;}}class Twig_NodeVisitor_Escaper implements Twig_NodeVisitorInterface{protected$statusStack=array();protected$blocks=array();protected$safeAnalysis;protected$traverser;protected$defaultStrategy=false;protected$safeVars=array();function __construct(){$this->safeAnalysis=new Twig_NodeVisitor_SafeAnalysis();}function enterNode(Twig_NodeInterface$B,Twig_Environment$H){if($B instanceof Twig_Node_Module){if($H->hasExtension('escaper')&&$lB=$H->getExtension('escaper')->getDefaultStrategy($B->getAttribute('filename'))){$this->defaultStrategy=$lB;}$this->safeVars=array();}elseif($B instanceof Twig_Node_AutoEscape){$this->statusStack[]=$B->getAttribute('value');}elseif($B instanceof Twig_Node_Block){$this->statusStack[]=isset($this->blocks[$B->getAttribute('name')])?$this->blocks[$B->getAttribute('name')]:$this->needEscaping($H);}elseif($B instanceof Twig_Node_Import){$this->safeVars[]=$B->getNode('var')->getAttribute('name');}return$B;}function leaveNode(Twig_NodeInterface$B,Twig_Environment$H){if($B instanceof Twig_Node_Module){$this->defaultStrategy=false;$this->safeVars=array();}elseif($B instanceof Twig_Node_Expression_Filter){return$this->preEscapeFilterNode($B,$H);}elseif($B instanceof Twig_Node_Print){return$this->escapePrintNode($B,$H,$this->needEscaping($H));}if($B instanceof Twig_Node_AutoEscape||$B instanceof Twig_Node_Block){array_pop($this->statusStack);}elseif($B instanceof Twig_Node_BlockReference){$this->blocks[$B->getAttribute('name')]=$this->needEscaping($H);}return$B;}protected function escapePrintNode(Twig_Node_Print$B,Twig_Environment$H,$T){if(false===$T){return$B;}$ZB=$B->getNode('expr');if($this->isSafeFor($T,$ZB,$H)){return$B;}$O=get_class($B);return new$O($this->getEscaperFilter($T,$ZB),$B->getLine());}protected function preEscapeFilterNode(Twig_Node_Expression_Filter$V,Twig_Environment$H){$C=$V->getNode('filter')->getAttribute('value');if(false!==$HE=$H->getFilter($C)){$T=$HE->getPreEscape();if(null===$T){return$V;}$B=$V->getNode('node');if($this->isSafeFor($T,$B,$H)){return$V;}$V->setNode('node',$this->getEscaperFilter($T,$B));return$V;}return$V;}protected function isSafeFor($T,Twig_NodeInterface$ZB,$H){$y=$this->safeAnalysis->getSafe($ZB);if(null===$y){if(null===$this->traverser){$this->traverser=new Twig_NodeTraverser($H,array($this->safeAnalysis));}$this->safeAnalysis->setSafeVars($this->safeVars);$this->traverser->traverse($ZB);$y=$this->safeAnalysis->getSafe($ZB);}return in_array($T,$y)||in_array('all',$y);}protected function needEscaping(Twig_Environment$H){if(count($this->statusStack)){return$this->statusStack[count($this->statusStack)-1];}return$this->defaultStrategy?$this->defaultStrategy:false;}protected function getEscaperFilter($T,Twig_NodeInterface$B){$c=$B->getLine();$C=new Twig_Node_Expression_Constant('escape',$c);$m=new Twig_Node(array(new Twig_Node_Expression_Constant((string)$T,$c),new Twig_Node_Expression_Constant(null,$c),new Twig_Node_Expression_Constant(true,$c)));return new Twig_Node_Expression_Filter($B,$C,$m,$c);}function getPriority(){return 0;}}class Twig_NodeVisitor_Sandbox implements Twig_NodeVisitorInterface{protected$inAModule=false;protected$tags;protected$filters;protected$functions;function enterNode(Twig_NodeInterface$B,Twig_Environment$H){if($B instanceof Twig_Node_Sandbox&&!$B->getNode('body')instanceof Twig_Node_Include){foreach($B->getNode('body')as$k){if($k instanceof Twig_Node_Text&&ctype_space($k->getAttribute('data'))){continue;}if(!$k instanceof Twig_Node_Include){throw new Twig_Error_Syntax('Only "include" tags are allowed within a "sandbox" section',$k->getLine());}}}if($B instanceof Twig_Node_Module){$this->inAModule=true;$this->tags=array();$this->filters=array();$this->functions=array();return$B;}elseif($this->inAModule){if($B->getNodeTag()){$this->tags[]=$B->getNodeTag();}if($B instanceof Twig_Node_Expression_Filter){$this->filters[]=$B->getNode('filter')->getAttribute('value');}if($B instanceof Twig_Node_Expression_Function){$this->functions[]=$B->getAttribute('name');}if($B instanceof Twig_Node_Print){return new Twig_Node_SandboxedPrint($B->getNode('expr'),$B->getLine(),$B->getNodeTag());}}return$B;}function leaveNode(Twig_NodeInterface$B,Twig_Environment$H){if($B instanceof Twig_Node_Module){$this->inAModule=false;return new Twig_Node_SandboxedModule($B,array_unique($this->filters),array_unique($this->tags),array_unique($this->functions));}return$B;}function getPriority(){return 0;}}class Twig_NodeVisitor_SafeAnalysis implements Twig_NodeVisitorInterface{protected$data=array();protected$safeVars=array();function setSafeVars($AE){$this->safeVars=$AE;}function getSafe(Twig_NodeInterface$B){$nB=spl_object_hash($B);if(isset($this->data[$nB])){foreach($this->data[$nB]as$IC){if($IC['key']===$B){return$IC['value'];}}}return null;}protected function setSafe(Twig_NodeInterface$B,array$y){$nB=spl_object_hash($B);if(isset($this->data[$nB])){foreach($this->data[$nB]as&$IC){if($IC['key']===$B){$IC['value']=$y;return;}}}$this->data[$nB][]=array('key'=>$B,'value'=>$y,);}function enterNode(Twig_NodeInterface$B,Twig_Environment$H){return$B;}function leaveNode(Twig_NodeInterface$B,Twig_Environment$H){if($B instanceof Twig_Node_Expression_Constant){$this->setSafe($B,array('all'));}elseif($B instanceof Twig_Node_Expression_BlockReference){$this->setSafe($B,array('all'));}elseif($B instanceof Twig_Node_Expression_Parent){$this->setSafe($B,array('all'));}elseif($B instanceof Twig_Node_Expression_Conditional){$y=$this->intersectSafe($this->getSafe($B->getNode('expr2')),$this->getSafe($B->getNode('expr3')));$this->setSafe($B,$y);}elseif($B instanceof Twig_Node_Expression_Filter){$C=$B->getNode('filter')->getAttribute('value');$m=$B->getNode('arguments');if(false!==$V=$H->getFilter($C)){$y=$V->getSafe($m);if(null===$y){$y=$this->intersectSafe($this->getSafe($B->getNode('node')),$V->getPreservesSafety());}$this->setSafe($B,$y);}else{$this->setSafe($B,array());}}elseif($B instanceof Twig_Node_Expression_Function){$C=$B->getAttribute('name');$m=$B->getNode('arguments');$d=$H->getFunction($C);if(false!==$d){$this->setSafe($B,$d->getSafe($m));}else{$this->setSafe($B,array());}}elseif($B instanceof Twig_Node_Expression_MethodCall){if($B->getAttribute('safe')){$this->setSafe($B,array('all'));}else{$this->setSafe($B,array());}}elseif($B instanceof Twig_Node_Expression_GetAttr&&$B->getNode('node')instanceof Twig_Node_Expression_Name){$C=$B->getNode('node')->getAttribute('name');if('_self'==$C||in_array($C,$this->safeVars)){$this->setSafe($B,array('all'));}else{$this->setSafe($B,array());}}else{$this->setSafe($B,array());}return$B;}protected function intersectSafe(array$dC=null,array$kB=null){if(null===$dC||null===$kB){return array();}if(in_array('all',$dC)){return$kB;}if(in_array('all',$kB)){return$dC;}return array_intersect($dC,$kB);}function getPriority(){return 0;}}class Twig_Token{protected$value;protected$type;protected$lineno;const EOF_TYPE=-1;const TEXT_TYPE=0;const BLOCK_START_TYPE=1;const VAR_START_TYPE=2;const BLOCK_END_TYPE=3;const VAR_END_TYPE=4;const NAME_TYPE=5;const NUMBER_TYPE=6;const STRING_TYPE=7;const OPERATOR_TYPE=8;const PUNCTUATION_TYPE=9;const INTERPOLATION_START_TYPE=10;const INTERPOLATION_END_TYPE=11;function __construct($T,$F,$E){$this->type=$T;$this->value=$F;$this->lineno=$E;}function __toString(){return sprintf('%s(%s)',self::typeToString($this->type,true,$this->lineno),$this->value);}function test($T,$L=null){if(null===$L&&!is_int($T)){$L=$T;$T=self::NAME_TYPE;}return($this->type===$T)&&(null===$L||(is_array($L)&&in_array($this->value,$L))||$this->value==$L);}function getLine(){return$this->lineno;}function getType(){return$this->type;}function getValue(){return$this->value;}static function typeToString($T,$EE=false,$c=-1){switch($T){case self::EOF_TYPE:$C='EOF_TYPE';break;case self::TEXT_TYPE:$C='TEXT_TYPE';break;case self::BLOCK_START_TYPE:$C='BLOCK_START_TYPE';break;case self::VAR_START_TYPE:$C='VAR_START_TYPE';break;case self::BLOCK_END_TYPE:$C='BLOCK_END_TYPE';break;case self::VAR_END_TYPE:$C='VAR_END_TYPE';break;case self::NAME_TYPE:$C='NAME_TYPE';break;case self::NUMBER_TYPE:$C='NUMBER_TYPE';break;case self::STRING_TYPE:$C='STRING_TYPE';break;case self::OPERATOR_TYPE:$C='OPERATOR_TYPE';break;case self::PUNCTUATION_TYPE:$C='PUNCTUATION_TYPE';break;case self::INTERPOLATION_START_TYPE:$C='INTERPOLATION_START_TYPE';break;case self::INTERPOLATION_END_TYPE:$C='INTERPOLATION_END_TYPE';break;default:throw new Twig_Error_Syntax(sprintf('Token of type "%s" does not exist.',$T),$c);}return$EE?$C:'Twig_Token::'.$C;}static function typeToEnglish($T,$c=-1){switch($T){case self::EOF_TYPE:return'end of template';case self::TEXT_TYPE:return'text';case self::BLOCK_START_TYPE:return'begin of statement block';case self::VAR_START_TYPE:return'begin of print statement';case self::BLOCK_END_TYPE:return'end of statement block';case self::VAR_END_TYPE:return'end of print statement';case self::NAME_TYPE:return'name';case self::NUMBER_TYPE:return'number';case self::STRING_TYPE:return'string';case self::OPERATOR_TYPE:return'operator';case self::PUNCTUATION_TYPE:return'punctuation';case self::INTERPOLATION_START_TYPE:return'begin of string interpolation';case self::INTERPOLATION_END_TYPE:return'end of string interpolation';default:throw new Twig_Error_Syntax(sprintf('Token of type "%s" does not exist.',$T),$c);}}}class Twig_ExpressionParser{const OPERATOR_LEFT=1;const OPERATOR_RIGHT=2;protected$parser;protected$unaryOperators;protected$binaryOperators;function __construct(Twig_Parser$Q,array$NE,array$OE){$this->parser=$Q;$this->unaryOperators=$NE;$this->binaryOperators=$OE;}function parseExpression($TD=0){$S=$this->getPrimary();$D=$this->parser->getCurrentToken();while($this->isBinary($D)&&$this->binaryOperators[$D->getValue()]['precedence']>=$TD){$zB=$this->binaryOperators[$D->getValue()];$this->parser->getStream()->next();if(isset($zB['callable'])){$S=call_user_func($zB['callable'],$this->parser,$S);}else{$gC=$this->parseExpression(self::OPERATOR_LEFT===$zB['associativity']?$zB['precedence']+1:$zB['precedence']);$O=$zB['class'];$S=new$O($S,$gC,$D->getLine());}$D=$this->parser->getCurrentToken();}if(0===$TD){return$this->parseConditionalExpression($S);}return$S;}protected function getPrimary(){$D=$this->parser->getCurrentToken();if($this->isUnary($D)){$wB=$this->unaryOperators[$D->getValue()];$this->parser->getStream()->next();$S=$this->parseExpression($wB['precedence']);$O=$wB['class'];return$this->parsePostfixExpression(new$O($S,$D->getLine()));}elseif($D->test(Twig_Token::PUNCTUATION_TYPE,'(')){$this->parser->getStream()->next();$S=$this->parseExpression();$this->parser->getStream()->expect(Twig_Token::PUNCTUATION_TYPE,')','An opened parenthesis is not properly closed');return$this->parsePostfixExpression($S);}return$this->parsePrimaryExpression();}protected function parseConditionalExpression($S){while($this->parser->getStream()->test(Twig_Token::PUNCTUATION_TYPE,'?')){$this->parser->getStream()->next();$kC=$this->parseExpression();$this->parser->getStream()->expect(Twig_Token::PUNCTUATION_TYPE,':','The ternary operator must have a default value');$qC=$this->parseExpression();$S=new Twig_Node_Expression_Conditional($S,$kC,$qC,$this->parser->getCurrentToken()->getLine());}return$S;}protected function isUnary(Twig_Token$D){return$D->test(Twig_Token::OPERATOR_TYPE)&&isset($this->unaryOperators[$D->getValue()]);}protected function isBinary(Twig_Token$D){return$D->test(Twig_Token::OPERATOR_TYPE)&&isset($this->binaryOperators[$D->getValue()]);}function parsePrimaryExpression(){$D=$this->parser->getCurrentToken();switch($D->getType()){case Twig_Token::NAME_TYPE:$this->parser->getStream()->next();switch($D->getValue()){case'true':case'TRUE':$B=new Twig_Node_Expression_Constant(true,$D->getLine());break;case'false':case'FALSE':$B=new Twig_Node_Expression_Constant(false,$D->getLine());break;case'none':case'NONE':case'null':case'NULL':$B=new Twig_Node_Expression_Constant(null,$D->getLine());break;default:if('('===$this->parser->getCurrentToken()->getValue()){$B=$this->getFunctionNode($D->getValue(),$D->getLine());}else{$B=new Twig_Node_Expression_Name($D->getValue(),$D->getLine());}}break;case Twig_Token::NUMBER_TYPE:$this->parser->getStream()->next();$B=new Twig_Node_Expression_Constant($D->getValue(),$D->getLine());break;case Twig_Token::STRING_TYPE:case Twig_Token::INTERPOLATION_START_TYPE:$B=$this->parseStringExpression();break;default:if($D->test(Twig_Token::PUNCTUATION_TYPE,'[')){$B=$this->parseArrayExpression();}elseif($D->test(Twig_Token::PUNCTUATION_TYPE,'{')){$B=$this->parseHashExpression();}else{throw new Twig_Error_Syntax(sprintf('Unexpected token "%s" of value "%s"',Twig_Token::typeToEnglish($D->getType(),$D->getLine()),$D->getValue()),$D->getLine());}}return$this->parsePostfixExpression($B);}function parseStringExpression(){$G=$this->parser->getStream();$r=array();$mC=true;while(true){if($G->test(Twig_Token::STRING_TYPE)&&$mC){$D=$G->next();$r[]=new Twig_Node_Expression_Constant($D->getValue(),$D->getLine());$mC=false;}elseif($G->test(Twig_Token::INTERPOLATION_START_TYPE)){$G->next();$r[]=$this->parseExpression();$G->expect(Twig_Token::INTERPOLATION_END_TYPE);$mC=true;}else{break;}}$S=array_shift($r);foreach($r as$B){$S=new Twig_Node_Expression_Binary_Concat($S,$B,$B->getLine());}return$S;}function parseArrayExpression(){$G=$this->parser->getStream();$G->expect(Twig_Token::PUNCTUATION_TYPE,'[','An array element was expected');$B=new Twig_Node_Expression_Array(array(),$G->getCurrent()->getLine());$j=true;while(!$G->test(Twig_Token::PUNCTUATION_TYPE,']')){if(!$j){$G->expect(Twig_Token::PUNCTUATION_TYPE,',','An array element must be followed by a comma');if($G->test(Twig_Token::PUNCTUATION_TYPE,']')){break;}}$j=false;$B->addElement($this->parseExpression());}$G->expect(Twig_Token::PUNCTUATION_TYPE,']','An opened array is not properly closed');return$B;}function parseHashExpression(){$G=$this->parser->getStream();$G->expect(Twig_Token::PUNCTUATION_TYPE,'{','A hash element was expected');$B=new Twig_Node_Expression_Array(array(),$G->getCurrent()->getLine());$j=true;while(!$G->test(Twig_Token::PUNCTUATION_TYPE,'}')){if(!$j){$G->expect(Twig_Token::PUNCTUATION_TYPE,',','A hash value must be followed by a comma');if($G->test(Twig_Token::PUNCTUATION_TYPE,'}')){break;}}$j=false;if($G->test(Twig_Token::STRING_TYPE)||$G->test(Twig_Token::NAME_TYPE)||$G->test(Twig_Token::NUMBER_TYPE)){$D=$G->next();$h=new Twig_Node_Expression_Constant($D->getValue(),$D->getLine());}elseif($G->test(Twig_Token::PUNCTUATION_TYPE,'(')){$h=$this->parseExpression();}else{$cC=$G->getCurrent();throw new Twig_Error_Syntax(sprintf('A hash key must be a quoted string, a number, a name, or an expression enclosed in parentheses (unexpected token "%s" of value "%s"',Twig_Token::typeToEnglish($cC->getType(),$cC->getLine()),$cC->getValue()),$cC->getLine());}$G->expect(Twig_Token::PUNCTUATION_TYPE,':','A hash key must be followed by a colon (:)');$F=$this->parseExpression();$B->addElement($F,$h);}$G->expect(Twig_Token::PUNCTUATION_TYPE,'}','An opened hash is not properly closed');return$B;}function parsePostfixExpression($B){while(true){$D=$this->parser->getCurrentToken();if($D->getType()==Twig_Token::PUNCTUATION_TYPE){if('.'==$D->getValue()||'['==$D->getValue()){$B=$this->parseSubscriptExpression($B);}elseif('|'==$D->getValue()){$B=$this->parseFilterExpression($B);}else{break;}}else{break;}}return$B;}function getFunctionNode($C,$c){$m=$this->parseArguments();switch($C){case'parent':if(!count($this->parser->getBlockStack())){throw new Twig_Error_Syntax('Calling "parent" outside a block is forbidden',$c);}if(!$this->parser->getParent()&&!$this->parser->hasTraits()){throw new Twig_Error_Syntax('Calling "parent" on a template that does not extend nor "use" another template is forbidden',$c);}return new Twig_Node_Expression_Parent($this->parser->peekBlockStack(),$c);case'block':return new Twig_Node_Expression_BlockReference($m->getNode(0),false,$c);case'attribute':if(count($m)<2){throw new Twig_Error_Syntax('The "attribute" function takes at least two arguments (the variable and the attributes)',$c);}return new Twig_Node_Expression_GetAttr($m->getNode(0),$m->getNode(1),count($m)>2?$m->getNode(2):new Twig_Node_Expression_Array(array(),$c),Twig_TemplateInterface::ANY_CALL,$c);default:if(null!==$u=$this->parser->getImportedFunction($C)){$N=new Twig_Node_Expression_Array(array(),$c);foreach($m as$k){$N->addElement($k);}$B=new Twig_Node_Expression_MethodCall($u['node'],$u['name'],$N,$c);$B->setAttribute('safe',true);return$B;}$O=$this->getFunctionNodeClass($C);return new$O($C,$m,$c);}}function parseSubscriptExpression($B){$G=$this->parser->getStream();$D=$G->next();$E=$D->getLine();$N=new Twig_Node_Expression_Array(array(),$E);$T=Twig_TemplateInterface::ANY_CALL;if($D->getValue()=='.'){$D=$G->next();if($D->getType()==Twig_Token::NAME_TYPE||$D->getType()==Twig_Token::NUMBER_TYPE||($D->getType()==Twig_Token::OPERATOR_TYPE&&preg_match(Twig_Lexer::REGEX_NAME,$D->getValue()))){$WB=new Twig_Node_Expression_Constant($D->getValue(),$E);if($G->test(Twig_Token::PUNCTUATION_TYPE,'(')){$T=Twig_TemplateInterface::METHOD_CALL;foreach($this->parseArguments()as$k){$N->addElement($k);}}}else{throw new Twig_Error_Syntax('Expected name or number',$E);}}else{$T=Twig_TemplateInterface::ARRAY_CALL;$WB=$this->parseExpression();if($G->test(Twig_Token::PUNCTUATION_TYPE,':')){$G->next();if($G->test(Twig_Token::PUNCTUATION_TYPE,']')){$JB=new Twig_Node_Expression_Constant(null,$D->getLine());}else{$JB=$this->parseExpression();}$O=$this->getFilterNodeClass('slice');$N=new Twig_Node(array($WB,$JB));$V=new$O($B,new Twig_Node_Expression_Constant('slice',$D->getLine()),$N,$D->getLine());$G->expect(Twig_Token::PUNCTUATION_TYPE,']');return$V;}$G->expect(Twig_Token::PUNCTUATION_TYPE,']');}return new Twig_Node_Expression_GetAttr($B,$WB,$N,$T,$E);}function parseFilterExpression($B){$this->parser->getStream()->next();return$this->parseFilterExpressionRaw($B);}function parseFilterExpressionRaw($B,$J=null){while(true){$D=$this->parser->getStream()->expect(Twig_Token::NAME_TYPE);$C=new Twig_Node_Expression_Constant($D->getValue(),$D->getLine());if(!$this->parser->getStream()->test(Twig_Token::PUNCTUATION_TYPE,'(')){$N=new Twig_Node();}else{$N=$this->parseArguments();}$O=$this->getFilterNodeClass($C->getAttribute('value'));$B=new$O($B,$C,$N,$D->getLine(),$J);if(!$this->parser->getStream()->test(Twig_Token::PUNCTUATION_TYPE,'|')){break;}$this->parser->getStream()->next();}return$B;}function parseArguments(){$m=array();$G=$this->parser->getStream();$G->expect(Twig_Token::PUNCTUATION_TYPE,'(','A list of arguments must be opened by a parenthesis');while(!$G->test(Twig_Token::PUNCTUATION_TYPE,')')){if(!empty($m)){$G->expect(Twig_Token::PUNCTUATION_TYPE,',','Arguments must be separated by a comma');}$m[]=$this->parseExpression();}$G->expect(Twig_Token::PUNCTUATION_TYPE,')','A list of arguments must be closed by a parenthesis');return new Twig_Node($m);}function parseAssignmentExpression(){$q=array();while(true){$D=$this->parser->getStream()->expect(Twig_Token::NAME_TYPE,null,'Only variables can be assigned to');if(in_array($D->getValue(),array('true','false','none'))){throw new Twig_Error_Syntax(sprintf('You cannot assign a value to "%s"',$D->getValue()),$D->getLine());}$q[]=new Twig_Node_Expression_AssignName($D->getValue(),$D->getLine());if(!$this->parser->getStream()->test(Twig_Token::PUNCTUATION_TYPE,',')){break;}$this->parser->getStream()->next();}return new Twig_Node($q);}function parseMultitargetExpression(){$q=array();while(true){$q[]=$this->parseExpression();if(!$this->parser->getStream()->test(Twig_Token::PUNCTUATION_TYPE,',')){break;}$this->parser->getStream()->next();}return new Twig_Node($q);}protected function getFunctionNodeClass($C){$nC=$this->parser->getEnvironment()->getFunctions();if(isset($nC[$C])&&$nC[$C]instanceof Twig_Function_Node){return$nC[$C]->getClass();}return'Twig_Node_Expression_Function';}protected function getFilterNodeClass($C){$oC=$this->parser->getEnvironment()->getFilters();if(isset($oC[$C])&&$oC[$C]instanceof Twig_Filter_Node){return$oC[$C]->getClass();}return'Twig_Node_Expression_Filter';}}abstract class Twig_TokenParser implements Twig_TokenParserInterface{protected$parser;function setParser(Twig_Parser$Q){$this->parser=$Q;}}interface Twig_TemplateInterface{const ANY_CALL='any';const ARRAY_CALL='array';const METHOD_CALL='method';function render(array$U);function display(array$U,array$g=array());function getEnvironment();}class Twig_Parser implements Twig_ParserInterface{protected$stack=array();protected$stream;protected$parent;protected$handlers;protected$visitors;protected$expressionParser;protected$blocks;protected$blockStack;protected$macros;protected$env;protected$reservedMacroNames;protected$importedFunctions;protected$traits;protected$embeddedTemplates=array();function __construct(Twig_Environment$H){$this->env=$H;}function getEnvironment(){return$this->env;}function getVarName(){return sprintf('__internal_%s',hash('sha1',uniqid(mt_rand(),true),false));}function parse(Twig_TokenStream$G,$_=null,$jC=false){$RB=get_object_vars($this);unset($RB['stack'],$RB['env'],$RB['handlers'],$RB['visitors'],$RB['expressionParser']);$this->stack[]=$RB;if(null===$this->handlers){$this->handlers=$this->env->getTokenParsers();$this->handlers->setParser($this);}if(null===$this->visitors){$this->visitors=$this->env->getNodeVisitors();}if(null===$this->expressionParser){$this->expressionParser=new Twig_ExpressionParser($this,$this->env->getUnaryOperators(),$this->env->getBinaryOperators());}$this->stream=$G;$this->parent=null;$this->blocks=array();$this->macros=array();$this->traits=array();$this->blockStack=array();$this->importedFunctions=array(array());$this->embeddedTemplates=array();try{$R=$this->subparse($_,$jC);if(null!==$this->parent){if(null===$R=$this->filterBodyNodes($R)){$R=new Twig_Node();}}}catch(Twig_Error_Syntax$W){if(null===$W->getTemplateFile()){$W->setTemplateFile($this->stream->getFilename());}throw$W;}$B=new Twig_Node_Module(new Twig_Node_Body(array($R)),$this->parent,new Twig_Node($this->blocks),new Twig_Node($this->macros),new Twig_Node($this->traits),$this->embeddedTemplates,$this->stream->getFilename());$RE=new Twig_NodeTraverser($this->env,$this->visitors);$B=$RE->traverse($B);foreach(array_pop($this->stack)as$h=>$SE){$this->$h=$SE;}return$B;}function subparse($_,$jC=false){$E=$this->getCurrentToken()->getLine();$UB=array();while(!$this->stream->isEOF()){switch($this->getCurrentToken()->getType()){case Twig_Token::TEXT_TYPE:$D=$this->stream->next();$UB[]=new Twig_Node_Text($D->getValue(),$D->getLine());break;case Twig_Token::VAR_START_TYPE:$D=$this->stream->next();$S=$this->expressionParser->parseExpression();$this->stream->expect(Twig_Token::VAR_END_TYPE);$UB[]=new Twig_Node_Print($S,$D->getLine());break;case Twig_Token::BLOCK_START_TYPE:$this->stream->next();$D=$this->getCurrentToken();if($D->getType()!==Twig_Token::NAME_TYPE){throw new Twig_Error_Syntax('A block must start with a tag name',$D->getLine(),$this->stream->getFilename());}if(null!==$_&&call_user_func($_,$D)){if($jC){$this->stream->next();}if(1===count($UB)){return$UB[0];}return new Twig_Node($UB,array(),$E);}$LD=$this->handlers->getTokenParser($D->getValue());if(null===$LD){if(null!==$_){throw new Twig_Error_Syntax(sprintf('Unexpected tag name "%s" (expecting closing tag for the "%s" tag defined near line %s)',$D->getValue(),$_[0]->getTag(),$E),$D->getLine(),$this->stream->getFilename());}$f=sprintf('Unknown tag name "%s"',$D->getValue());if($DB=$this->env->computeAlternatives($D->getValue(),array_keys($this->env->getTags()))){$f=sprintf('%s. Did you mean "%s"',$f,implode('", "',$DB));}throw new Twig_Error_Syntax($f,$D->getLine(),$this->stream->getFilename());}$this->stream->next();$B=$LD->parse($D);if(null!==$B){$UB[]=$B;}break;default:throw new Twig_Error_Syntax('Lexer or parser ended up in unsupported state.',-1,$this->stream->getFilename());}}if(1===count($UB)){return$UB[0];}return new Twig_Node($UB,array(),$E);}function addHandler($C,$O){$this->handlers[$C]=$O;}function addNodeVisitor(Twig_NodeVisitorInterface$l){$this->visitors[]=$l;}function getBlockStack(){return$this->blockStack;}function peekBlockStack(){return$this->blockStack[count($this->blockStack)-1];}function popBlockStack(){array_pop($this->blockStack);}function pushBlockStack($C){$this->blockStack[]=$C;}function hasBlock($C){return isset($this->blocks[$C]);}function getBlock($C){return$this->blocks[$C];}function setBlock($C,$F){$this->blocks[$C]=new Twig_Node_Body(array($F),array(),$F->getLine());}function hasMacro($C){return isset($this->macros[$C]);}function setMacro($C,Twig_Node_Macro$B){if(null===$this->reservedMacroNames){$this->reservedMacroNames=array();$KC=new ReflectionClass($this->env->getBaseTemplateClass());foreach($KC->getMethods()as$b){$this->reservedMacroNames[]=$b->getName();}}if(in_array($C,$this->reservedMacroNames)){throw new Twig_Error_Syntax(sprintf('"%s" cannot be used as a macro name as it is a reserved keyword',$C),$B->getLine());}$this->macros[$C]=$B;}function addTrait($rB){$this->traits[]=$rB;}function hasTraits(){return count($this->traits)>0;}function embedTemplate(Twig_Node_Module$n){$n->setIndex(mt_rand());$this->embeddedTemplates[]=$n;}function addImportedFunction($u,$C,Twig_Node_Expression$B){$this->importedFunctions[0][$u]=array('name'=>$C,'node'=>$B);}function getImportedFunction($u){foreach($this->importedFunctions as$PB){if(isset($PB[$u])){return$PB[$u];}}}function isMainScope(){return 1===count($this->importedFunctions);}function pushLocalScope(){array_unshift($this->importedFunctions,array());}function popLocalScope(){array_shift($this->importedFunctions);}function getExpressionParser(){return$this->expressionParser;}function getParent(){return$this->parent;}function setParent($i){$this->parent=$i;}function getStream(){return$this->stream;}function getCurrentToken(){return$this->stream->getCurrent();}protected function filterBodyNodes(Twig_NodeInterface$B){if(($B instanceof Twig_Node_Text&&!ctype_space($B->getAttribute('data')))||(!$B instanceof Twig_Node_Text&&!$B instanceof Twig_Node_BlockReference&&$B instanceof Twig_NodeOutputInterface)){if(false!==strpos((string)$B,chr(0xEF).chr(0xBB).chr(0xBF))){throw new Twig_Error_Syntax('A template that extends another one cannot have a body but a byte order mark (BOM) has been detected; it must be removed.',$B->getLine(),$this->stream->getFilename());}throw new Twig_Error_Syntax('A template that extends another one cannot have a body.',$B->getLine(),$this->stream->getFilename());}if($B instanceof Twig_Node_Set){return$B;}if($B instanceof Twig_NodeOutputInterface){return;}foreach($B as$aC=>$k){if(null!==$k&&null===$k=$this->filterBodyNodes($k)){$B->removeNode($aC);}}return$B;}}interface Twig_LoaderInterface{function getSource($C);function getCacheKey($C);function isFresh($C,$NB);}class Twig_Lexer implements Twig_LexerInterface{protected$tokens;protected$code;protected$cursor;protected$lineno;protected$end;protected$state;protected$states;protected$brackets;protected$env;protected$filename;protected$options;protected$regexes;protected$position;protected$positions;const STATE_DATA=0;const STATE_BLOCK=1;const STATE_VAR=2;const STATE_STRING=3;const STATE_INTERPOLATION=4;const REGEX_NAME='/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/A';const REGEX_NUMBER='/[0-9]+(?:\.[0-9]+)?/A';const REGEX_STRING='/"([^#"\\\\]*(?:\\\\.[^#"\\\\]*)*)"|\'([^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'/As';const REGEX_DQ_STRING_DELIM='/"/A';const REGEX_DQ_STRING_PART='/[^#"\\\\]*(?:(?:\\\\.|#(?!\{))[^#"\\\\]*)*/As';const PUNCTUATION='()[]{}?:.,|';function __construct(Twig_Environment$H,array$X=array()){$this->env=$H;$this->options=array_merge(array('tag_comment'=>array('{#','#}'),'tag_block'=>array('{%','%}'),'tag_variable'=>array('{{','}}'),'whitespace_trim'=>'-','interpolation'=>array('#{','}'),),$X);$this->regexes=array('lex_var'=>'/\s*'.preg_quote($this->options['whitespace_trim'].$this->options['tag_variable'][1],'/').'\s*|\s*'.preg_quote($this->options['tag_variable'][1],'/').'/A','lex_block'=>'/\s*(?:'.preg_quote($this->options['whitespace_trim'].$this->options['tag_block'][1],'/').'\s*|\s*'.preg_quote($this->options['tag_block'][1],'/').')\n?/A','lex_raw_data'=>'/('.preg_quote($this->options['tag_block'][0].$this->options['whitespace_trim'],'/').'|'.preg_quote($this->options['tag_block'][0],'/').')\s*endraw\s*(?:'.preg_quote($this->options['whitespace_trim'].$this->options['tag_block'][1],'/').'\s*|\s*'.preg_quote($this->options['tag_block'][1],'/').')/s','operator'=>$this->getOperatorRegex(),'lex_comment'=>'/(?:'.preg_quote($this->options['whitespace_trim'],'/').preg_quote($this->options['tag_comment'][1],'/').'\s*|'.preg_quote($this->options['tag_comment'][1],'/').')\n?/s','lex_block_raw'=>'/\s*raw\s*(?:'.preg_quote($this->options['whitespace_trim'].$this->options['tag_block'][1],'/').'\s*|\s*'.preg_quote($this->options['tag_block'][1],'/').')/As','lex_block_line'=>'/\s*line\s+(\d+)\s*'.preg_quote($this->options['tag_block'][1],'/').'/As','lex_tokens_start'=>'/('.preg_quote($this->options['tag_variable'][0],'/').'|'.preg_quote($this->options['tag_block'][0],'/').'|'.preg_quote($this->options['tag_comment'][0],'/').')('.preg_quote($this->options['whitespace_trim'],'/').')?/s','interpolation_start'=>'/'.preg_quote($this->options['interpolation'][0],'/').'\s*/A','interpolation_end'=>'/\s*'.preg_quote($this->options['interpolation'][1],'/').'/A',);}function tokenize($HD,$p=null){if(function_exists('mb_internal_encoding')&&((int)ini_get('mbstring.func_overload'))&2){$RD=mb_internal_encoding();mb_internal_encoding('ASCII');}$this->code=str_replace(array("\r\n","\r"),"\n",$HD);$this->filename=$p;$this->cursor=0;$this->lineno=1;$this->end=strlen($this->code);$this->tokens=array();$this->state=self::STATE_DATA;$this->states=array();$this->brackets=array();$this->position=-1;preg_match_all($this->regexes['lex_tokens_start'],$this->code,$v,PREG_OFFSET_CAPTURE);$this->positions=$v;while($this->cursor<$this->end){switch($this->state){case self::STATE_DATA:$this->lexData();break;case self::STATE_BLOCK:$this->lexBlock();break;case self::STATE_VAR:$this->lexVar();break;case self::STATE_STRING:$this->lexString();break;case self::STATE_INTERPOLATION:$this->lexInterpolation();break;}}$this->pushToken(Twig_Token::EOF_TYPE);if(!empty($this->brackets)){list($oB,$E)=array_pop($this->brackets);throw new Twig_Error_Syntax(sprintf('Unclosed "%s"',$oB),$E,$this->filename);}if(isset($RD)){mb_internal_encoding($RD);}return new Twig_TokenStream($this->tokens,$this->filename);}protected function lexData(){if($this->position==count($this->positions[0])-1){$this->pushToken(Twig_Token::TEXT_TYPE,substr($this->code,$this->cursor));$this->cursor=$this->end;return;}$YC=$this->positions[0][++$this->position];while($YC[1]<$this->cursor){if($this->position==count($this->positions[0])-1){return;}$YC=$this->positions[0][++$this->position];}$CB=$jD=substr($this->code,$this->cursor,$YC[1]-$this->cursor);if(isset($this->positions[2][$this->position][0])){$CB=rtrim($CB);}$this->pushToken(Twig_Token::TEXT_TYPE,$CB);$this->moveCursor($jD.$YC[0]);switch($this->positions[1][$this->position][0]){case$this->options['tag_comment'][0]:$this->lexComment();break;case$this->options['tag_block'][0]:if(preg_match($this->regexes['lex_block_raw'],$this->code,$P,null,$this->cursor)){$this->moveCursor($P[0]);$this->lexRawData();}elseif(preg_match($this->regexes['lex_block_line'],$this->code,$P,null,$this->cursor)){$this->moveCursor($P[0]);$this->lineno=(int)$P[1];}else{$this->pushToken(Twig_Token::BLOCK_START_TYPE);$this->pushState(self::STATE_BLOCK);}break;case$this->options['tag_variable'][0]:$this->pushToken(Twig_Token::VAR_START_TYPE);$this->pushState(self::STATE_VAR);break;}}protected function lexBlock(){if(empty($this->brackets)&&preg_match($this->regexes['lex_block'],$this->code,$P,null,$this->cursor)){$this->pushToken(Twig_Token::BLOCK_END_TYPE);$this->moveCursor($P[0]);$this->popState();}else{$this->lexExpression();}}protected function lexVar(){if(empty($this->brackets)&&preg_match($this->regexes['lex_var'],$this->code,$P,null,$this->cursor)){$this->pushToken(Twig_Token::VAR_END_TYPE);$this->moveCursor($P[0]);$this->popState();}else{$this->lexExpression();}}protected function lexExpression(){if(preg_match('/\s+/A',$this->code,$P,null,$this->cursor)){$this->moveCursor($P[0]);if($this->cursor>=$this->end){throw new Twig_Error_Syntax(sprintf('Unexpected end of file: Unclosed "%s"',$this->state===self::STATE_BLOCK?'block':'variable'),$this->lineno,$this->filename);}}if(preg_match($this->regexes['operator'],$this->code,$P,null,$this->cursor)){$this->pushToken(Twig_Token::OPERATOR_TYPE,$P[0]);$this->moveCursor($P[0]);}elseif(preg_match(self::REGEX_NAME,$this->code,$P,null,$this->cursor)){$this->pushToken(Twig_Token::NAME_TYPE,$P[0]);$this->moveCursor($P[0]);}elseif(preg_match(self::REGEX_NUMBER,$this->code,$P,null,$this->cursor)){$cB=(float)$P[0];if(ctype_digit($P[0])&&$cB<=PHP_INT_MAX){$cB=(int)$P[0];}$this->pushToken(Twig_Token::NUMBER_TYPE,$cB);$this->moveCursor($P[0]);}elseif(false!==strpos(self::PUNCTUATION,$this->code[$this->cursor])){if(false!==strpos('([{',$this->code[$this->cursor])){$this->brackets[]=array($this->code[$this->cursor],$this->lineno);}elseif(false!==strpos(')]}',$this->code[$this->cursor])){if(empty($this->brackets)){throw new Twig_Error_Syntax(sprintf('Unexpected "%s"',$this->code[$this->cursor]),$this->lineno,$this->filename);}list($oB,$E)=array_pop($this->brackets);if($this->code[$this->cursor]!=strtr($oB,'([{',')]}')){throw new Twig_Error_Syntax(sprintf('Unclosed "%s"',$oB),$E,$this->filename);}}$this->pushToken(Twig_Token::PUNCTUATION_TYPE,$this->code[$this->cursor]);++$this->cursor;}elseif(preg_match(self::REGEX_STRING,$this->code,$P,null,$this->cursor)){$this->pushToken(Twig_Token::STRING_TYPE,stripcslashes(substr($P[0],1,-1)));$this->moveCursor($P[0]);}elseif(preg_match(self::REGEX_DQ_STRING_DELIM,$this->code,$P,null,$this->cursor)){$this->brackets[]=array('"',$this->lineno);$this->pushState(self::STATE_STRING);$this->moveCursor($P[0]);}else{throw new Twig_Error_Syntax(sprintf('Unexpected character "%s"',$this->code[$this->cursor]),$this->lineno,$this->filename);}}protected function lexRawData(){if(!preg_match($this->regexes['lex_raw_data'],$this->code,$P,PREG_OFFSET_CAPTURE,$this->cursor)){throw new Twig_Error_Syntax(sprintf('Unexpected end of file: Unclosed "block"'),$this->lineno,$this->filename);}$CB=substr($this->code,$this->cursor,$P[0][1]-$this->cursor);$this->moveCursor($CB.$P[0][0]);if(false!==strpos($P[1][0],$this->options['whitespace_trim'])){$CB=rtrim($CB);}$this->pushToken(Twig_Token::TEXT_TYPE,$CB);}protected function lexComment(){if(!preg_match($this->regexes['lex_comment'],$this->code,$P,PREG_OFFSET_CAPTURE,$this->cursor)){throw new Twig_Error_Syntax('Unclosed comment',$this->lineno,$this->filename);}$this->moveCursor(substr($this->code,$this->cursor,$P[0][1]-$this->cursor).$P[0][0]);}protected function lexString(){if(preg_match($this->regexes['interpolation_start'],$this->code,$P,null,$this->cursor)){$this->brackets[]=array($this->options['interpolation'][0],$this->lineno);$this->pushToken(Twig_Token::INTERPOLATION_START_TYPE);$this->moveCursor($P[0]);$this->pushState(self::STATE_INTERPOLATION);}elseif(preg_match(self::REGEX_DQ_STRING_PART,$this->code,$P,null,$this->cursor)&&strlen($P[0])>0){$this->pushToken(Twig_Token::STRING_TYPE,stripcslashes($P[0]));$this->moveCursor($P[0]);}elseif(preg_match(self::REGEX_DQ_STRING_DELIM,$this->code,$P,null,$this->cursor)){list($oB,$E)=array_pop($this->brackets);if($this->code[$this->cursor]!='"'){throw new Twig_Error_Syntax(sprintf('Unclosed "%s"',$oB),$E,$this->filename);}$this->popState();++$this->cursor;}}protected function lexInterpolation(){$hD=end($this->brackets);if($this->options['interpolation'][0]===$hD[0]&&preg_match($this->regexes['interpolation_end'],$this->code,$P,null,$this->cursor)){array_pop($this->brackets);$this->pushToken(Twig_Token::INTERPOLATION_END_TYPE);$this->moveCursor($P[0]);$this->popState();}else{$this->lexExpression();}}protected function pushToken($T,$F=''){if(Twig_Token::TEXT_TYPE===$T&&''===$F){return;}$this->tokens[]=new Twig_Token($T,$F,$this->lineno);}protected function moveCursor($CB){$this->cursor+=strlen($CB);$this->lineno+=substr_count($CB,"\n");}protected function getOperatorRegex(){$GB=array_merge(array('='),array_keys($this->env->getUnaryOperators()),array_keys($this->env->getBinaryOperators()));$GB=array_combine($GB,array_map('strlen',$GB));arsort($GB);$iC=array();foreach($GB as$wB=>$JB){if(ctype_alpha($wB[$JB-1])){$iC[]=preg_quote($wB,'/').'(?=[\s()])';}else{$iC[]=preg_quote($wB,'/');}}return'/'.implode('|',$iC).'/A';}protected function pushState($dD){$this->states[]=$this->state;$this->state=$dD;}protected function popState(){if(0===count($this->states)){throw new Exception('Cannot pop state without a previous state');}$this->state=array_pop($this->states);}}interface Twig_NodeInterface extends Countable,IteratorAggregate{function compile(Twig_Compiler$A);function getLine();function getNodeTag();}class Twig_Node_Text extends Twig_Node implements Twig_NodeOutputInterface{function __construct($ZD,$E){parent::__construct(array(),array('data'=>$ZD),$E);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write('echo ')->string($this->getAttribute('data'))->raw(";\n");}}class Twig_Node_Spaceless extends Twig_Node{function __construct(Twig_NodeInterface$R,$E,$J='spaceless'){parent::__construct(array('body'=>$R),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write("ob_start();\n")->subcompile($this->getNode('body'))->write("echo trim(preg_replace('/>\s+</', '><', ob_get_clean()));\n");}}class Twig_Node_Flush extends Twig_Node{function __construct($E,$J){parent::__construct(array(),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write("flush();\n");}}class Twig_Node_ForLoop extends Twig_Node{function __construct($E,$J=null){parent::__construct(array(),array('with_loop'=>false,'ifexpr'=>false,'else'=>false),$E,$J);}function compile(Twig_Compiler$A){if($this->getAttribute('else')){$A->write("\$context['_iterated'] = true;\n");}if($this->getAttribute('with_loop')){$A->write("++\$context['loop']['index0'];\n")->write("++\$context['loop']['index'];\n")->write("\$context['loop']['first'] = false;\n");if(!$this->getAttribute('ifexpr')){$A->write("if (isset(\$context['loop']['length'])) {\n")->indent()->write("--\$context['loop']['revindex0'];\n")->write("--\$context['loop']['revindex'];\n")->write("\$context['loop']['last'] = 0 === \$context['loop']['revindex0'];\n")->outdent()->write("}\n");}}}}class Twig_Node_AutoEscape extends Twig_Node{function __construct($F,Twig_NodeInterface$R,$E,$J='autoescape'){parent::__construct(array('body'=>$R),array('value'=>$F),$E,$J);}function compile(Twig_Compiler$A){$A->subcompile($this->getNode('body'));}}class Twig_Node_Macro extends Twig_Node{function __construct($C,Twig_NodeInterface$R,Twig_NodeInterface$N,$E,$J=null){parent::__construct(array('body'=>$R,'arguments'=>$N),array('name'=>$C),$E,$J);}function compile(Twig_Compiler$A){$N=array();foreach($this->getNode('arguments')as$dB){$N[]='$'.$dB->getAttribute('name').' = null';}$A->addDebugInfo($this)->write(sprintf("public function get%s(%s)\n",$this->getAttribute('name'),implode(', ',$N)),"{\n")->indent();if(!count($this->getNode('arguments'))){$A->write("\$context = \$this->env->getGlobals();\n\n");}else{$A->write("\$context = \$this->env->mergeGlobals(array(\n")->indent();foreach($this->getNode('arguments')as$dB){$A->write('')->string($dB->getAttribute('name'))->raw(' => $'.$dB->getAttribute('name'))->raw(",\n");}$A->outdent()->write("));\n\n");}$A->write("\$blocks = array();\n\n")->write("ob_start();\n")->write("try {\n")->indent()->subcompile($this->getNode('body'))->outdent()->write("} catch(Exception \$e) {\n")->indent()->write("ob_end_clean();\n\n")->write("throw \$e;\n")->outdent()->write("}\n\n")->write("return ob_get_clean();\n")->outdent()->write("}\n\n");}}class Twig_Node_Include extends Twig_Node implements Twig_NodeOutputInterface{function __construct(Twig_Node_Expression$S,Twig_Node_Expression$KB=null,$IB=false,$EB=false,$E,$J=null){parent::__construct(array('expr'=>$S,'variables'=>$KB),array('only'=>(Boolean)$IB,'ignore_missing'=>(Boolean)$EB),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this);if($this->getAttribute('ignore_missing')){$A->write("try {\n")->indent();}$this->addGetTemplate($A);$A->raw('->display(');$this->addTemplateArguments($A);$A->raw(");\n");if($this->getAttribute('ignore_missing')){$A->outdent()->write("} catch (Twig_Error_Loader \$e) {\n")->indent()->write("// ignore missing template\n")->outdent()->write("}\n\n");}}protected function addGetTemplate(Twig_Compiler$A){if($this->getNode('expr')instanceof Twig_Node_Expression_Constant){$A->write("\$this->env->loadTemplate(")->subcompile($this->getNode('expr'))->raw(")");}else{$A->write("\$template = \$this->env->resolveTemplate(")->subcompile($this->getNode('expr'))->raw(");\n")->write('$template');}}protected function addTemplateArguments(Twig_Compiler$A){if(false===$this->getAttribute('only')){if(null===$this->getNode('variables')){$A->raw('$context');}else{$A->raw('array_merge($context, ')->subcompile($this->getNode('variables'))->raw(')');}}else{if(null===$this->getNode('variables')){$A->raw('array()');}else{$A->subcompile($this->getNode('variables'));}}}}class Twig_Node_Do extends Twig_Node{function __construct(Twig_Node_Expression$S,$E,$J=null){parent::__construct(array('expr'=>$S),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write('')->subcompile($this->getNode('expr'))->raw(";\n");}}class Twig_Node_If extends Twig_Node{function __construct(Twig_NodeInterface$HC,Twig_NodeInterface$MB=null,$E,$J=null){parent::__construct(array('tests'=>$HC,'else'=>$MB),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this);for($Z=0;$Z<count($this->getNode('tests'));$Z+=2){if($Z>0){$A->outdent()->write("} elseif (");}else{$A->write('if (');}$A->subcompile($this->getNode('tests')->getNode($Z))->raw(") {\n")->indent()->subcompile($this->getNode('tests')->getNode($Z+1));}if($this->hasNode('else')&&null!==$this->getNode('else')){$A->outdent()->write("} else {\n")->indent()->subcompile($this->getNode('else'));}$A->outdent()->write("}\n");}}class Twig_Node_BlockReference extends Twig_Node implements Twig_NodeOutputInterface{function __construct($C,$E,$J=null){parent::__construct(array(),array('name'=>$C),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write(sprintf("\$this->displayBlock('%s', \$context, \$blocks);\n",$this->getAttribute('name')));}}class Twig_Node_Module extends Twig_Node{function __construct(Twig_NodeInterface$R,Twig_Node_Expression$i=null,Twig_NodeInterface$g,Twig_NodeInterface$cD,Twig_NodeInterface$gD,$zD,$p){parent::__construct(array('parent'=>$i,'body'=>$R,'blocks'=>$g,'macros'=>$cD,'traits'=>$gD),array('filename'=>$p,'index'=>null,'embedded_templates'=>$zD),1);}function setIndex($bB){$this->setAttribute('index',$bB);}function compile(Twig_Compiler$A){$this->compileTemplate($A);foreach($this->getAttribute('embedded_templates')as$n){$A->subcompile($n);}}protected function compileTemplate(Twig_Compiler$A){if(!$this->getAttribute('index')){$A->write('<?php');}$this->compileClassHeader($A);if(count($this->getNode('blocks'))||count($this->getNode('traits'))||null===$this->getNode('parent')||$this->getNode('parent')instanceof Twig_Node_Expression_Constant){$this->compileConstructor($A);}$this->compileGetParent($A);$this->compileDisplayHeader($A);$this->compileDisplayBody($A);$this->compileDisplayFooter($A);$A->subcompile($this->getNode('blocks'));$this->compileMacros($A);$this->compileGetTemplateName($A);$this->compileIsTraitable($A);$this->compileDebugInfo($A);$this->compileClassFooter($A);}protected function compileGetParent(Twig_Compiler$A){if(null===$this->getNode('parent')){return;}$A->write("protected function doGetParent(array \$context)\n","{\n")->indent()->write("return ");if($this->getNode('parent')instanceof Twig_Node_Expression_Constant){$A->subcompile($this->getNode('parent'));}else{$A->raw("\$this->env->resolveTemplate(")->subcompile($this->getNode('parent'))->raw(")");}$A->raw(";\n")->outdent()->write("}\n\n");}protected function compileDisplayBody(Twig_Compiler$A){$A->subcompile($this->getNode('body'));if(null!==$this->getNode('parent')){if($this->getNode('parent')instanceof Twig_Node_Expression_Constant){$A->write("\$this->parent");}else{$A->write("\$this->getParent(\$context)");}$A->raw("->display(\$context, array_merge(\$this->blocks, \$blocks));\n");}}protected function compileClassHeader(Twig_Compiler$A){$A->write("\n\n")->write("/* ".str_replace('*/','* /',$this->getAttribute('filename'))." */\n")->write('class '.$A->getEnvironment()->getTemplateClass($this->getAttribute('filename'),$this->getAttribute('index')))->raw(sprintf(" extends %s\n",$A->getEnvironment()->getBaseTemplateClass()))->write("{\n")->indent();}protected function compileConstructor(Twig_Compiler$A){$A->write("public function __construct(Twig_Environment \$env)\n","{\n")->indent()->write("parent::__construct(\$env);\n\n");if(null===$this->getNode('parent')){$A->write("\$this->parent = false;\n\n");}elseif($this->getNode('parent')instanceof Twig_Node_Expression_Constant){$A->write("\$this->parent = \$this->env->loadTemplate(")->subcompile($this->getNode('parent'))->raw(");\n\n");}$AC=count($this->getNode('traits'));if($AC){foreach($this->getNode('traits')as$Z=>$rB){$this->compileLoadTemplate($A,$rB->getNode('template'),sprintf('$_trait_%s',$Z));$A->addDebugInfo($rB->getNode('template'))->write(sprintf("if (!\$_trait_%s->isTraitable()) {\n",$Z))->indent()->write("throw new Twig_Error_Runtime('Template \"'.")->subcompile($rB->getNode('template'))->raw(".'\" cannot be used as a trait.');\n")->outdent()->write("}\n")->write(sprintf("\$_trait_%s_blocks = \$_trait_%s->getBlocks();\n\n",$Z,$Z));foreach($rB->getNode('targets')as$h=>$F){$A->write(sprintf("\$_trait_%s_blocks[",$Z))->subcompile($F)->raw(sprintf("] = \$_trait_%s_blocks[",$Z))->string($h)->raw(sprintf("]; unset(\$_trait_%s_blocks[",$Z))->string($h)->raw("]);\n\n");}}if($AC>1){$A->write("\$this->traits = array_merge(\n")->indent();for($Z=0;$Z<$AC;$Z++){$A->write(sprintf("\$_trait_%s_blocks".($Z==$AC-1?'':',')."\n",$Z));}$A->outdent()->write(");\n\n");}else{$A->write("\$this->traits = \$_trait_0_blocks;\n\n");}$A->write("\$this->blocks = array_merge(\n")->indent()->write("\$this->traits,\n")->write("array(\n");}else{$A->write("\$this->blocks = array(\n");}$A->indent();foreach($this->getNode('blocks')as$C=>$B){$A->write(sprintf("'%s' => array(\$this, 'block_%s'),\n",$C,$C));}if($AC){$A->outdent()->write(")\n");}$A->outdent()->write(");\n")->outdent()->write("}\n\n");;}protected function compileDisplayHeader(Twig_Compiler$A){$A->write("protected function doDisplay(array \$context, array \$blocks = array())\n","{\n")->indent();}protected function compileDisplayFooter(Twig_Compiler$A){$A->outdent()->write("}\n\n");}protected function compileClassFooter(Twig_Compiler$A){$A->outdent()->write("}\n");}protected function compileMacros(Twig_Compiler$A){$A->subcompile($this->getNode('macros'));}protected function compileGetTemplateName(Twig_Compiler$A){$A->write("public function getTemplateName()\n","{\n")->indent()->write('return ')->repr($this->getAttribute('filename'))->raw(";\n")->outdent()->write("}\n\n");}protected function compileIsTraitable(Twig_Compiler$A){$ZC=null===$this->getNode('parent')&&0===count($this->getNode('macros'));if($ZC){if($this->getNode('body')instanceof Twig_Node_Body){$r=$this->getNode('body')->getNode(0);}else{$r=$this->getNode('body');}if(!count($r)){$r=new Twig_Node(array($r));}foreach($r as$B){if(!count($B)){continue;}if($B instanceof Twig_Node_Text&&ctype_space($B->getAttribute('data'))){continue;}if($B instanceof Twig_Node_BlockReference){continue;}$ZC=false;break;}}if($ZC){return;}$A->write("public function isTraitable()\n","{\n")->indent()->write(sprintf("return %s;\n",$ZC?'true':'false'))->outdent()->write("}\n\n");}protected function compileDebugInfo(Twig_Compiler$A){$A->write("public function getDebugInfo()\n","{\n")->indent()->write(sprintf("return %s;\n",str_replace("\n",'',var_export(array_reverse($A->getDebugInfo(),true),true))))->outdent()->write("}\n");}protected function compileLoadTemplate(Twig_Compiler$A,$B,$QB){if($B instanceof Twig_Node_Expression_Constant){$A->write(sprintf("%s = \$this->env->loadTemplate(",$QB))->subcompile($B)->raw(");\n");}else{$A->write(sprintf("%s = ",$QB))->subcompile($B)->raw(";\n")->write(sprintf("if (!%s",$QB))->raw(" instanceof Twig_Template) {\n")->indent()->write(sprintf("%s = \$this->env->loadTemplate(%s);\n",$QB,$QB))->outdent()->write("}\n");}}}class Twig_Node_Print extends Twig_Node implements Twig_NodeOutputInterface{function __construct(Twig_Node_Expression$S,$E,$J=null){parent::__construct(array('expr'=>$S),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write('echo ')->subcompile($this->getNode('expr'))->raw(";\n");}}class Twig_Node_Expression_Conditional extends Twig_Node_Expression{function __construct(Twig_Node_Expression$gC,Twig_Node_Expression$kC,Twig_Node_Expression$qC,$E){parent::__construct(array('expr1'=>$gC,'expr2'=>$kC,'expr3'=>$qC),array(),$E);}function compile(Twig_Compiler$A){$A->raw('((')->subcompile($this->getNode('expr1'))->raw(') ? (')->subcompile($this->getNode('expr2'))->raw(') : (')->subcompile($this->getNode('expr3'))->raw('))');}}class Twig_Node_Expression_Parent extends Twig_Node_Expression{function __construct($C,$E,$J=null){parent::__construct(array(),array('output'=>false,'name'=>$C),$E,$J);}function compile(Twig_Compiler$A){if($this->getAttribute('output')){$A->addDebugInfo($this)->write("\$this->displayParentBlock(")->string($this->getAttribute('name'))->raw(", \$context, \$blocks);\n");}else{$A->raw("\$this->renderParentBlock(")->string($this->getAttribute('name'))->raw(", \$context, \$blocks)");}}}class Twig_Node_Expression_Filter_Default extends Twig_Node_Expression_Filter{function __construct(Twig_NodeInterface$B,Twig_Node_Expression_Constant$TC,Twig_NodeInterface$N,$E,$J=null){$UC=new Twig_Node_Expression_Filter($B,new Twig_Node_Expression_Constant('_default',$B->getLine()),$N,$B->getLine());if('default'===$TC->getAttribute('value')&&($B instanceof Twig_Node_Expression_Name||$B instanceof Twig_Node_Expression_GetAttr)){$_=new Twig_Node_Expression_Test_Defined(clone$B,'defined',new Twig_Node(),$B->getLine());$wD=count($N)?$N->getNode(0):new Twig_Node_Expression_Constant('',$B->getLine());$B=new Twig_Node_Expression_Conditional($_,$UC,$wD,$B->getLine());}else{$B=$UC;}parent::__construct($B,$TC,$N,$E,$J);}function compile(Twig_Compiler$A){$A->subcompile($this->getNode('node'));}}class Twig_Node_Expression_Constant extends Twig_Node_Expression{function __construct($F,$E){parent::__construct(array(),array('value'=>$F),$E);}function compile(Twig_Compiler$A){$A->repr($this->getAttribute('value'));}}class Twig_Node_Expression_Filter extends Twig_Node_Expression{function __construct(Twig_NodeInterface$B,Twig_Node_Expression_Constant$TC,Twig_NodeInterface$N,$E,$J=null){parent::__construct(array('node'=>$B,'filter'=>$TC,'arguments'=>$N),array(),$E,$J);}function compile(Twig_Compiler$A){$C=$this->getNode('filter')->getAttribute('value');if(false===$V=$A->getEnvironment()->getFilter($C)){$f=sprintf('The filter "%s" does not exist',$C);if($DB=$A->getEnvironment()->computeAlternatives($C,array_keys($A->getEnvironment()->getFilters()))){$f=sprintf('%s. Did you mean "%s"',$f,implode('", "',$DB));}throw new Twig_Error_Syntax($f,$this->getLine());}$this->compileFilter($A,$V);}protected function compileFilter(Twig_Compiler$A,Twig_FilterInterface$V){$A->raw($V->compile().'(')->raw($V->needsEnvironment()?'$this->env, ':'')->raw($V->needsContext()?'$context, ':'');foreach($V->getArguments()as$dB){$A->string($dB)->raw(', ');}$A->subcompile($this->getNode('node'));foreach($this->getNode('arguments')as$B){$A->raw(', ')->subcompile($B);}$A->raw(')');}}class Twig_Node_Expression_BlockReference extends Twig_Node_Expression{function __construct(Twig_NodeInterface$C,$pB=false,$E,$J=null){parent::__construct(array('name'=>$C),array('as_string'=>$pB,'output'=>false),$E,$J);}function compile(Twig_Compiler$A){if($this->getAttribute('as_string')){$A->raw('(string) ');}if($this->getAttribute('output')){$A->addDebugInfo($this)->write("\$this->displayBlock(")->subcompile($this->getNode('name'))->raw(", \$context, \$blocks);\n");}else{$A->raw("\$this->renderBlock(")->subcompile($this->getNode('name'))->raw(", \$context, \$blocks)");}}}class Twig_Node_Expression_Name extends Twig_Node_Expression{protected$specialVars=array('_self'=>'$this','_context'=>'$context','_charset'=>'$this->env->getCharset()',);function __construct($C,$E){parent::__construct(array(),array('name'=>$C,'is_defined_test'=>false,'ignore_strict_check'=>false),$E);}function compile(Twig_Compiler$A){$C=$this->getAttribute('name');if($this->getAttribute('is_defined_test')){if($this->isSpecial()){$A->repr(true);}else{$A->raw('array_key_exists(')->repr($C)->raw(', $context)');}}elseif($this->isSpecial()){$A->raw($this->specialVars[$C]);}else{if(version_compare(phpversion(),'5.4.0RC1','>=')&&($this->getAttribute('ignore_strict_check')||!$A->getEnvironment()->isStrictVariables())){$A->raw('(isset($context[')->string($C)->raw(']) ? $context[')->string($C)->raw('] : null)');}else{$A->raw('$this->getContext($context, ')->string($C);if($this->getAttribute('ignore_strict_check')){$A->raw(', true');}$A->raw(')');}}}function isSpecial(){return isset($this->specialVars[$this->getAttribute('name')]);}function isSimple(){return!$this->isSpecial()&&!$this->getAttribute('is_defined_test');}}class Twig_Node_Expression_GetAttr extends Twig_Node_Expression{function __construct(Twig_Node_Expression$B,Twig_Node_Expression$PC,Twig_Node_Expression_Array$N,$T,$E){parent::__construct(array('node'=>$B,'attribute'=>$PC,'arguments'=>$N),array('type'=>$T,'is_defined_test'=>false,'ignore_strict_check'=>false),$E);}function compile(Twig_Compiler$A){if(function_exists('twig_template_get_attributes')){$A->raw('twig_template_get_attributes($this, ');}else{$A->raw('$this->getAttribute(');}if($this->getAttribute('ignore_strict_check')){$this->getNode('node')->setAttribute('ignore_strict_check',true);}$A->subcompile($this->getNode('node'));$A->raw(', ')->subcompile($this->getNode('attribute'));if(count($this->getNode('arguments'))||Twig_TemplateInterface::ANY_CALL!==$this->getAttribute('type')||$this->getAttribute('is_defined_test')||$this->getAttribute('ignore_strict_check')){$A->raw(', ')->subcompile($this->getNode('arguments'));if(Twig_TemplateInterface::ANY_CALL!==$this->getAttribute('type')||$this->getAttribute('is_defined_test')||$this->getAttribute('ignore_strict_check')){$A->raw(', ')->repr($this->getAttribute('type'));}if($this->getAttribute('is_defined_test')||$this->getAttribute('ignore_strict_check')){$A->raw(', '.($this->getAttribute('is_defined_test')?'true':'false'));}if($this->getAttribute('ignore_strict_check')){$A->raw(', '.($this->getAttribute('ignore_strict_check')?'true':'false'));}}$A->raw(')');}}abstract class Twig_Node_Expression_Binary extends Twig_Node_Expression{function __construct(Twig_NodeInterface$yD,Twig_NodeInterface$xD,$E){parent::__construct(array('left'=>$yD,'right'=>$xD),array(),$E);}function compile(Twig_Compiler$A){$A->raw('(')->subcompile($this->getNode('left'))->raw(' ');$this->operator($A);$A->raw(' ')->subcompile($this->getNode('right'))->raw(')');}abstract function operator(Twig_Compiler$A);}class Twig_Node_Expression_Test_Constant extends Twig_Node_Expression_Test{function compile(Twig_Compiler$A){$A->raw('(')->subcompile($this->getNode('node'))->raw(' === constant(')->subcompile($this->getNode('arguments')->getNode(0))->raw('))');}}class Twig_Node_Expression_Test_Odd extends Twig_Node_Expression_Test{function compile(Twig_Compiler$A){$A->raw('(')->subcompile($this->getNode('node'))->raw(' % 2 == 1')->raw(')');}}class Twig_Node_Expression_Test_Null extends Twig_Node_Expression_Test{function compile(Twig_Compiler$A){$A->raw('(null === ')->subcompile($this->getNode('node'))->raw(')');}}class Twig_Node_Expression_Test_Even extends Twig_Node_Expression_Test{function compile(Twig_Compiler$A){$A->raw('(')->subcompile($this->getNode('node'))->raw(' % 2 == 0')->raw(')');}}class Twig_Node_Expression_Test_Sameas extends Twig_Node_Expression_Test{function compile(Twig_Compiler$A){$A->raw('(')->subcompile($this->getNode('node'))->raw(' === ')->subcompile($this->getNode('arguments')->getNode(0))->raw(')');}}class Twig_Node_Expression_Test_Defined extends Twig_Node_Expression_Test{function __construct(Twig_NodeInterface$B,$C,Twig_NodeInterface$N=null,$E){parent::__construct($B,$C,$N,$E);if($B instanceof Twig_Node_Expression_Name){$B->setAttribute('is_defined_test',true);}elseif($B instanceof Twig_Node_Expression_GetAttr){$B->setAttribute('is_defined_test',true);$this->changeIgnoreStrictCheck($B);}else{throw new Twig_Error_Syntax('The "defined" test only works with simple variables',$this->getLine());}}protected function changeIgnoreStrictCheck(Twig_Node_Expression_GetAttr$B){$B->setAttribute('ignore_strict_check',true);if($B->getNode('node')instanceof Twig_Node_Expression_GetAttr){$this->changeIgnoreStrictCheck($B->getNode('node'));}}function compile(Twig_Compiler$A){$A->subcompile($this->getNode('node'));}}class Twig_Node_Expression_Test_Divisibleby extends Twig_Node_Expression_Test{function compile(Twig_Compiler$A){$A->raw('(0 == ')->subcompile($this->getNode('node'))->raw(' % ')->subcompile($this->getNode('arguments')->getNode(0))->raw(')');}}abstract class Twig_Node_Expression_Unary extends Twig_Node_Expression{function __construct(Twig_NodeInterface$B,$E){parent::__construct(array('node'=>$B),array(),$E);}function compile(Twig_Compiler$A){$A->raw('(');$this->operator($A);$A->subcompile($this->getNode('node'))->raw(')');}abstract function operator(Twig_Compiler$A);}class Twig_Node_Expression_Binary_Or extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('||');}}class Twig_Node_Expression_Binary_FloorDiv extends Twig_Node_Expression_Binary{function compile(Twig_Compiler$A){$A->raw('intval(floor(');parent::compile($A);$A->raw('))');}function operator(Twig_Compiler$A){return$A->raw('/');}}class Twig_Node_Expression_Binary_Equal extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('==');}}class Twig_Node_Expression_Binary_BitwiseXor extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('^');}}class Twig_Node_Expression_Binary_Div extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('/');}}class Twig_Node_Expression_Binary_And extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('&&');}}class Twig_Node_Expression_Binary_NotIn extends Twig_Node_Expression_Binary{function compile(Twig_Compiler$A){$A->raw('!twig_in_filter(')->subcompile($this->getNode('left'))->raw(', ')->subcompile($this->getNode('right'))->raw(')');}function operator(Twig_Compiler$A){return$A->raw('not in');}}class Twig_Node_Expression_Binary_Power extends Twig_Node_Expression_Binary{function compile(Twig_Compiler$A){$A->raw('pow(')->subcompile($this->getNode('left'))->raw(', ')->subcompile($this->getNode('right'))->raw(')');}function operator(Twig_Compiler$A){return$A->raw('**');}}class Twig_Node_Expression_Binary_Mod extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('%');}}class Twig_Node_Expression_Binary_Sub extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('-');}}class Twig_Node_Expression_Binary_BitwiseAnd extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('&');}}class Twig_Node_Expression_Binary_BitwiseOr extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('|');}}class Twig_Node_Expression_Binary_Greater extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('>');}}class Twig_Node_Expression_Binary_Less extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('<');}}class Twig_Node_Expression_Binary_Mul extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('*');}}class Twig_Node_Expression_Binary_Add extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('+');}}class Twig_Node_Expression_Binary_In extends Twig_Node_Expression_Binary{function compile(Twig_Compiler$A){$A->raw('twig_in_filter(')->subcompile($this->getNode('left'))->raw(', ')->subcompile($this->getNode('right'))->raw(')');}function operator(Twig_Compiler$A){return$A->raw('in');}}class Twig_Node_Expression_Binary_LessEqual extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('<=');}}class Twig_Node_Expression_Binary_Concat extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('.');}}class Twig_Node_Expression_Binary_Range extends Twig_Node_Expression_Binary{function compile(Twig_Compiler$A){$A->raw('range(')->subcompile($this->getNode('left'))->raw(', ')->subcompile($this->getNode('right'))->raw(')');}function operator(Twig_Compiler$A){return$A->raw('..');}}class Twig_Node_Expression_Binary_NotEqual extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('!=');}}class Twig_Node_Expression_Binary_GreaterEqual extends Twig_Node_Expression_Binary{function operator(Twig_Compiler$A){return$A->raw('>=');}}class Twig_Node_Expression_ExtensionReference extends Twig_Node_Expression{function __construct($C,$E,$J=null){parent::__construct(array(),array('name'=>$C),$E,$J);}function compile(Twig_Compiler$A){$A->raw(sprintf("\$this->env->getExtension('%s')",$this->getAttribute('name')));}}class Twig_Node_Expression_TempName extends Twig_Node_Expression{function __construct($C,$E){parent::__construct(array(),array('name'=>$C),$E);}function compile(Twig_Compiler$A){$A->raw('$_')->raw($this->getAttribute('name'))->raw('_');}}class Twig_Node_Expression_Array extends Twig_Node_Expression{protected$index;function __construct(array$sD,$E){parent::__construct($sD,array(),$E);$this->index=-1;foreach($this->getKeyValuePairs()as$w){if($w['key']instanceof Twig_Node_Expression_Constant&&ctype_digit((string)$w['key']->getAttribute('value'))&&$w['key']->getAttribute('value')>$this->index){$this->index=$w['key']->getAttribute('value');}}}function getKeyValuePairs(){$GD=array();foreach(array_chunk($this->nodes,2)as$w){$GD[]=array('key'=>$w[0],'value'=>$w[1],);}return$GD;}function hasElement(Twig_Node_Expression$h){foreach($this->getKeyValuePairs()as$w){if((string)$h==(string)$w['key']){return true;}}return false;}function addElement(Twig_Node_Expression$F,Twig_Node_Expression$h=null){if(null===$h){$h=new Twig_Node_Expression_Constant(++$this->index,$F->getLine());}array_push($this->nodes,$h,$F);}function compile(Twig_Compiler$A){$A->raw('array(');$j=true;foreach($this->getKeyValuePairs()as$w){if(!$j){$A->raw(', ');}$j=false;$A->subcompile($w['key'])->raw(' => ')->subcompile($w['value']);}$A->raw(')');}}class Twig_Node_Expression_Test extends Twig_Node_Expression{function __construct(Twig_NodeInterface$B,$C,Twig_NodeInterface$N=null,$E){parent::__construct(array('node'=>$B,'arguments'=>$N),array('name'=>$C),$E);}function compile(Twig_Compiler$A){$C=$this->getAttribute('name');$tB=$A->getEnvironment()->getTests();if(!isset($tB[$C])){$f=sprintf('The test "%s" does not exist',$C);if($DB=$A->getEnvironment()->computeAlternatives($C,array_keys($A->getEnvironment()->getTests()))){$f=sprintf('%s. Did you mean "%s"',$f,implode('", "',$DB));}throw new Twig_Error_Syntax($f,$this->getLine());}$C=$this->getAttribute('name');$B=$this->getNode('node');$A->raw($tB[$C]->compile().'(')->subcompile($B);if(null!==$this->getNode('arguments')){$A->raw(', ');$mD=count($this->getNode('arguments'))-1;foreach($this->getNode('arguments')as$Z=>$WB){$A->subcompile($WB);if($Z!=$mD){$A->raw(', ');}}}$A->raw(')');}}class Twig_Node_Expression_MethodCall extends Twig_Node_Expression{function __construct(Twig_Node_Expression$B,$b,Twig_Node_Expression_Array$N,$E){parent::__construct(array('node'=>$B,'arguments'=>$N),array('method'=>$b,'safe'=>false),$E);}function compile(Twig_Compiler$A){$A->subcompile($this->getNode('node'))->raw('->')->raw($this->getAttribute('method'))->raw('(');$j=true;foreach($this->getNode('arguments')->getKeyValuePairs()as$w){if(!$j){$A->raw(', ');}$j=false;$A->subcompile($w['value']);}$A->raw(')');}}class Twig_Node_Expression_AssignName extends Twig_Node_Expression_Name{function compile(Twig_Compiler$A){$A->raw('$context[')->string($this->getAttribute('name'))->raw(']');}}class Twig_Node_Expression_Unary_Pos extends Twig_Node_Expression_Unary{function operator(Twig_Compiler$A){$A->raw('+');}}class Twig_Node_Expression_Unary_Not extends Twig_Node_Expression_Unary{function operator(Twig_Compiler$A){$A->raw('!');}}class Twig_Node_Expression_Unary_Neg extends Twig_Node_Expression_Unary{function operator(Twig_Compiler$A){$A->raw('-');}}class Twig_Node_Expression_Function extends Twig_Node_Expression{function __construct($C,Twig_NodeInterface$N,$E){parent::__construct(array('arguments'=>$N),array('name'=>$C),$E);}function compile(Twig_Compiler$A){$C=$this->getAttribute('name');if(false===$d=$A->getEnvironment()->getFunction($C)){$f=sprintf('The function "%s" does not exist',$C);if($DB=$A->getEnvironment()->computeAlternatives($C,array_keys($A->getEnvironment()->getFunctions()))){$f=sprintf('%s. Did you mean "%s"',$f,implode('", "',$DB));}throw new Twig_Error_Syntax($f,$this->getLine());}$A->raw($d->compile().'(');$j=true;if($d->needsEnvironment()){$A->raw('$this->env');$j=false;}if($d->needsContext()){if(!$j){$A->raw(', ');}$A->raw('$context');$j=false;}foreach($d->getArguments()as$dB){if(!$j){$A->raw(', ');}$A->string($dB);$j=false;}foreach($this->getNode('arguments')as$B){if(!$j){$A->raw(', ');}$A->subcompile($B);$j=false;}$A->raw(')');}}class Twig_Node_Block extends Twig_Node{function __construct($C,Twig_NodeInterface$R,$E,$J=null){parent::__construct(array('body'=>$R),array('name'=>$C),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write(sprintf("public function block_%s(\$context, array \$blocks = array())\n",$this->getAttribute('name')),"{\n")->indent();$A->subcompile($this->getNode('body'))->outdent()->write("}\n\n");}}class Twig_Node_Sandbox extends Twig_Node{function __construct(Twig_NodeInterface$R,$E,$J=null){parent::__construct(array('body'=>$R),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write("\$sandbox = \$this->env->getExtension('sandbox');\n")->write("if (!\$alreadySandboxed = \$sandbox->isSandboxed()) {\n")->indent()->write("\$sandbox->enableSandbox();\n")->outdent()->write("}\n")->subcompile($this->getNode('body'))->write("if (!\$alreadySandboxed) {\n")->indent()->write("\$sandbox->disableSandbox();\n")->outdent()->write("}\n");}}class Twig_Node_For extends Twig_Node{protected$loop;function __construct(Twig_Node_Expression_AssignName$hB,Twig_Node_Expression_AssignName$FB,Twig_Node_Expression$jB,Twig_Node_Expression$sB=null,Twig_NodeInterface$R,Twig_NodeInterface$MB=null,$E,$J=null){$R=new Twig_Node(array($R,$this->loop=new Twig_Node_ForLoop($E,$J)));if(null!==$sB){$R=new Twig_Node_If(new Twig_Node(array($sB,$R)),null,$E,$J);}parent::__construct(array('key_target'=>$hB,'value_target'=>$FB,'seq'=>$jB,'body'=>$R,'else'=>$MB),array('with_loop'=>true,'ifexpr'=>null!==$sB),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write("\$context['_parent'] = (array) \$context;\n")->write("\$context['_seq'] = twig_ensure_traversable(")->subcompile($this->getNode('seq'))->raw(");\n");if(null!==$this->getNode('else')){$A->write("\$context['_iterated'] = false;\n");}if($this->getAttribute('with_loop')){$A->write("\$context['loop'] = array(\n")->write("  'parent' => \$context['_parent'],\n")->write("  'index0' => 0,\n")->write("  'index'  => 1,\n")->write("  'first'  => true,\n")->write(");\n");if(!$this->getAttribute('ifexpr')){$A->write("if (is_array(\$context['_seq']) || (is_object(\$context['_seq']) && \$context['_seq'] instanceof Countable)) {\n")->indent()->write("\$length = count(\$context['_seq']);\n")->write("\$context['loop']['revindex0'] = \$length - 1;\n")->write("\$context['loop']['revindex'] = \$length;\n")->write("\$context['loop']['length'] = \$length;\n")->write("\$context['loop']['last'] = 1 === \$length;\n")->outdent()->write("}\n");}}$this->loop->setAttribute('else',null!==$this->getNode('else'));$this->loop->setAttribute('with_loop',$this->getAttribute('with_loop'));$this->loop->setAttribute('ifexpr',$this->getAttribute('ifexpr'));$A->write("foreach (\$context['_seq'] as ")->subcompile($this->getNode('key_target'))->raw(" => ")->subcompile($this->getNode('value_target'))->raw(") {\n")->indent()->subcompile($this->getNode('body'))->outdent()->write("}\n");if(null!==$this->getNode('else')){$A->write("if (!\$context['_iterated']) {\n")->indent()->subcompile($this->getNode('else'))->outdent()->write("}\n");}$A->write("\$_parent = \$context['_parent'];\n");$A->write('unset($context[\'_seq\'], $context[\'_iterated\'], $context[\''.$this->getNode('key_target')->getAttribute('name').'\'], $context[\''.$this->getNode('value_target')->getAttribute('name').'\'], $context[\'_parent\'], $context[\'loop\']);'."\n");$A->write("\$context = array_merge(\$_parent, array_intersect_key(\$context, \$_parent));\n");}}class Twig_Node_Import extends Twig_Node{function __construct(Twig_Node_Expression$S,Twig_Node_Expression$QB,$E,$J=null){parent::__construct(array('expr'=>$S,'var'=>$QB),array(),$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write('')->subcompile($this->getNode('var'))->raw(' = ');if($this->getNode('expr')instanceof Twig_Node_Expression_Name&&'_self'===$this->getNode('expr')->getAttribute('name')){$A->raw("\$this");}else{$A->raw('$this->env->loadTemplate(')->subcompile($this->getNode('expr'))->raw(")");}$A->raw(";\n");}}abstract class Twig_Node_Expression extends Twig_Node{}class Twig_Node_Embed extends Twig_Node_Include{function __construct($p,$bB,Twig_Node_Expression$KB=null,$IB=false,$EB=false,$E,$J=null){parent::__construct(new Twig_Node_Expression_Constant('not_used',$E),$KB,$IB,$EB,$E,$J);$this->setAttribute('filename',$p);$this->setAttribute('index',$bB);}protected function addGetTemplate(Twig_Compiler$A){$A->write("\$this->env->loadTemplate(")->string($this->getAttribute('filename'))->raw(', ')->string($this->getAttribute('index'))->raw(")");}}class Twig_Node_SetTemp extends Twig_Node{function __construct($C,$E){parent::__construct(array(),array('name'=>$C),$E);}function compile(Twig_Compiler$A){$C=$this->getAttribute('name');$A->addDebugInfo($this)->write('if (isset($context[')->string($C)->raw('])) { $_')->raw($C)->raw('_ = $context[')->repr($C)->raw(']; } else { $_')->raw($C)->raw("_ = null; }\n");}}class Twig_Node_Body extends Twig_Node{}class Twig_Node_SandboxedPrint extends Twig_Node_Print{function __construct(Twig_Node_Expression$S,$E,$J=null){parent::__construct($S,$E,$J);}function compile(Twig_Compiler$A){$A->addDebugInfo($this)->write('echo $this->env->getExtension(\'sandbox\')->ensureToStringAllowed(')->subcompile($this->getNode('expr'))->raw(");\n");}protected function removeNodeFilter($B){if($B instanceof Twig_Node_Expression_Filter){return$this->removeNodeFilter($B->getNode('node'));}return$B;}}class Twig_Node_SandboxedModule extends Twig_Node_Module{protected$usedFilters;protected$usedTags;protected$usedFunctions;function __construct(Twig_Node_Module$B,array$lD,array$nD,array$oD){parent::__construct($B->getNode('body'),$B->getNode('parent'),$B->getNode('blocks'),$B->getNode('macros'),$B->getNode('traits'),$B->getAttribute('embedded_templates'),$B->getAttribute('filename'),$B->getLine(),$B->getNodeTag());$this->setAttribute('index',$B->getAttribute('index'));$this->usedFilters=$lD;$this->usedTags=$nD;$this->usedFunctions=$oD;}protected function compileDisplayBody(Twig_Compiler$A){$A->write("\$this->checkSecurity();\n");parent::compileDisplayBody($A);}protected function compileDisplayFooter(Twig_Compiler$A){parent::compileDisplayFooter($A);$A->write("protected function checkSecurity() {\n")->indent()->write("\$this->env->getExtension('sandbox')->checkSecurity(\n")->indent()->write(!$this->usedTags?"array(),\n":"array('".implode('\', \'',$this->usedTags)."'),\n")->write(!$this->usedFilters?"array(),\n":"array('".implode('\', \'',$this->usedFilters)."'),\n")->write(!$this->usedFunctions?"array()\n":"array('".implode('\', \'',$this->usedFunctions)."')\n")->outdent()->write(");\n")->outdent()->write("}\n\n");}}class Twig_Node_Set extends Twig_Node{function __construct($eC,Twig_NodeInterface$z,Twig_NodeInterface$L,$E,$J=null){parent::__construct(array('names'=>$z,'values'=>$L),array('capture'=>$eC,'safe'=>false),$E,$J);if($this->getAttribute('capture')){$this->setAttribute('safe',true);$L=$this->getNode('values');if($L instanceof Twig_Node_Text){$this->setNode('values',new Twig_Node_Expression_Constant($L->getAttribute('data'),$L->getLine()));$this->setAttribute('capture',false);}}}function compile(Twig_Compiler$A){$A->addDebugInfo($this);if(count($this->getNode('names'))>1){$A->write('list(');foreach($this->getNode('names')as$lC=>$B){if($lC){$A->raw(', ');}$A->subcompile($B);}$A->raw(')');}else{if($this->getAttribute('capture')){$A->write("ob_start();\n")->subcompile($this->getNode('values'));}$A->subcompile($this->getNode('names'),false);if($this->getAttribute('capture')){$A->raw(" = ('' === \$tmp = ob_get_clean()) ? '' : new Twig_Markup(\$tmp, \$this->env->getCharset())");}}if(!$this->getAttribute('capture')){$A->raw(' = ');if(count($this->getNode('names'))>1){$A->write('array(');foreach($this->getNode('values')as$lC=>$F){if($lC){$A->raw(', ');}$A->subcompile($F);}$A->raw(')');}else{if($this->getAttribute('safe')){$A->raw("('' === \$tmp = ")->subcompile($this->getNode('values'))->raw(") ? '' : new Twig_Markup(\$tmp, \$this->env->getCharset())");}else{$A->subcompile($this->getNode('values'));}}}$A->raw(";\n");}}interface Twig_FilterInterface{function compile();function needsEnvironment();function needsContext();function getSafe(Twig_Node$FC);function getPreservesSafety();function getPreEscape();function setArguments($N);function getArguments();}interface Twig_ExtensionInterface{function initRuntime(Twig_Environment$qD);function getTokenParsers();function getNodeVisitors();function getFilters();function getTests();function getFunctions();function getOperators();function getGlobals();function getName();}abstract class Twig_Function implements Twig_FunctionInterface{protected$options;protected$arguments=array();function __construct(array$X=array()){$this->options=array_merge(array('needs_environment'=>false,'needs_context'=>false,),$X);}function setArguments($N){$this->arguments=$N;}function getArguments(){return$this->arguments;}function needsEnvironment(){return$this->options['needs_environment'];}function needsContext(){return$this->options['needs_context'];}function getSafe(Twig_Node$pD){if(isset($this->options['is_safe'])){return$this->options['is_safe'];}if(isset($this->options['is_safe_callback'])){return call_user_func($this->options['is_safe_callback'],$pD);}return array();}}